
mul:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	ins    BYTE PTR es:[edi],dx
 8048156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804815d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	10 00                	adc    BYTE PTR [eax],al
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	01 00                	add    DWORD PTR [eax],eax
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 00                	add    BYTE PTR [eax],al
 8048179:	00 00                	add    BYTE PTR [eax],al
 804817b:	00 02                	add    BYTE PTR [edx],al
 804817d:	00 00                	add    BYTE PTR [eax],al
 804817f:	00 06                	add    BYTE PTR [esi],al
 8048181:	00 00                	add    BYTE PTR [eax],al
 8048183:	00 18                	add    BYTE PTR [eax],bl
 8048185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    al,0x0
 804818a:	00 00                	add    BYTE PTR [eax],al
 804818c:	14 00                	adc    al,0x0
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	47                   	inc    edi
 8048195:	4e                   	dec    esi
 8048196:	55                   	push   ebp
 8048197:	00 5d c4             	add    BYTE PTR [ebp-0x3c],bl
 804819a:	29 b6 59 56 f2 52    	sub    DWORD PTR [esi+0x52f25659],esi
 80481a0:	67 a6                	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
 80481a2:	20 c2                	and    dl,al
 80481a4:	63 86 c1 24 f6 83    	arpl   WORD PTR [esi-0x7c09db3f],ax
 80481aa:	2d                   	.byte 0x2d
 80481ab:	3f                   	aas    

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    al,BYTE PTR [eax]
 80481ae:	00 00                	add    BYTE PTR [eax],al
 80481b0:	08 00                	or     BYTE PTR [eax],al
 80481b2:	00 00                	add    BYTE PTR [eax],al
 80481b4:	01 00                	add    DWORD PTR [eax],eax
 80481b6:	00 00                	add    BYTE PTR [eax],al
 80481b8:	05 00 00 00 00       	add    eax,0x0
 80481bd:	23 00                	and    eax,DWORD PTR [eax]
 80481bf:	20 08                	and    BYTE PTR [eax],cl
 80481c1:	00 00                	add    BYTE PTR [eax],al
 80481c3:	00 09                	add    BYTE PTR [ecx],cl
 80481c5:	00 00                	add    BYTE PTR [eax],al
 80481c7:	00 29                	add    BYTE PTR [ecx],ch
 80481c9:	1d 8c 1c ad 4b       	sbb    eax,0x4bad1c8c
 80481ce:	e3 c0                	jecxz  8048190 <_init-0x1ec>

Disassembly of section .dynsym:

080481d0 <.dynsym>:
	...
 80481e0:	33 00                	xor    eax,DWORD PTR [eax]
	...
 80481ea:	00 00                	add    BYTE PTR [eax],al
 80481ec:	12 00                	adc    al,BYTE PTR [eax]
 80481ee:	00 00                	add    BYTE PTR [eax],al
 80481f0:	2e 00 00             	add    BYTE PTR cs:[eax],al
	...
 80481fb:	00 12                	add    BYTE PTR [edx],dl
 80481fd:	00 00                	add    BYTE PTR [eax],al
 80481ff:	00 5b 00             	add    BYTE PTR [ebx+0x0],bl
	...
 804820a:	00 00                	add    BYTE PTR [eax],al
 804820c:	20 00                	and    BYTE PTR [eax],al
 804820e:	00 00                	add    BYTE PTR [eax],al
 8048210:	1a 00                	sbb    al,BYTE PTR [eax]
	...
 804821a:	00 00                	add    BYTE PTR [eax],al
 804821c:	12 00                	adc    al,BYTE PTR [eax]
 804821e:	00 00                	add    BYTE PTR [eax],al
 8048220:	49                   	dec    ecx
	...
 8048229:	00 00                	add    BYTE PTR [eax],al
 804822b:	00 12                	add    BYTE PTR [edx],dl
 804822d:	00 00                	add    BYTE PTR [eax],al
 804822f:	00 41 00             	add    BYTE PTR [ecx+0x0],al
	...
 804823a:	00 00                	add    BYTE PTR [eax],al
 804823c:	12 00                	adc    al,BYTE PTR [eax]
 804823e:	00 00                	add    BYTE PTR [eax],al
 8048240:	1f                   	pop    ds
	...
 8048249:	00 00                	add    BYTE PTR [eax],al
 804824b:	00 12                	add    BYTE PTR [edx],dl
 804824d:	00 00                	add    BYTE PTR [eax],al
 804824f:	00 3a                	add    BYTE PTR [edx],bh
 8048251:	00 00                	add    BYTE PTR [eax],al
 8048253:	00 40 a0             	add    BYTE PTR [eax-0x60],al
 8048256:	04 08                	add    al,0x8
 8048258:	04 00                	add    al,0x0
 804825a:	00 00                	add    BYTE PTR [eax],al
 804825c:	11 00                	adc    DWORD PTR [eax],eax
 804825e:	19 00                	sbb    DWORD PTR [eax],eax
 8048260:	0b 00                	or     eax,DWORD PTR [eax]
 8048262:	00 00                	add    BYTE PTR [eax],al
 8048264:	4c                   	dec    esp
 8048265:	88 04 08             	mov    BYTE PTR [eax+ecx*1],al
 8048268:	04 00                	add    al,0x0
 804826a:	00 00                	add    BYTE PTR [eax],al
 804826c:	11 00                	adc    DWORD PTR [eax],eax
 804826e:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

08048270 <.dynstr>:
 8048270:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 8048274:	63 2e                	arpl   WORD PTR [esi],bp
 8048276:	73 6f                	jae    80482e7 <_init-0x95>
 8048278:	2e 36 00 5f 49       	cs add BYTE PTR cs:ss:[edi+0x49],bl
 804827d:	4f                   	dec    edi
 804827e:	5f                   	pop    edi
 804827f:	73 74                	jae    80482f5 <_init-0x87>
 8048281:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048288:	64 
 8048289:	00 65 78             	add    BYTE PTR [ebp+0x78],ah
 804828c:	69 74 00 5f 5f 69 73 	imul   esi,DWORD PTR [eax+eax*1+0x5f],0x6f73695f
 8048293:	6f 
 8048294:	63 39                	arpl   WORD PTR [ecx],di
 8048296:	39 5f 73             	cmp    DWORD PTR [edi+0x73],ebx
 8048299:	63 61 6e             	arpl   WORD PTR [ecx+0x6e],sp
 804829c:	66                   	data16
 804829d:	00 70 75             	add    BYTE PTR [eax+0x75],dh
 80482a0:	74 73                	je     8048315 <_init-0x67>
 80482a2:	00 70 72             	add    BYTE PTR [eax+0x72],dh
 80482a5:	69 6e 74 66 00 73 74 	imul   ebp,DWORD PTR [esi+0x74],0x74730066
 80482ac:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 80482ae:	75 74                	jne    8048324 <_init-0x58>
 80482b0:	00 73 65             	add    BYTE PTR [ebx+0x65],dh
 80482b3:	74 76                	je     804832b <_init-0x51>
 80482b5:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 80482b8:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 80482bb:	6c                   	ins    BYTE PTR es:[edi],dx
 80482bc:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 80482c3:	72 74                	jb     8048339 <_init-0x43>
 80482c5:	5f                   	pop    edi
 80482c6:	6d                   	ins    DWORD PTR es:[edi],dx
 80482c7:	61                   	popa   
 80482c8:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [esi+0x0],0x6d675f5f
 80482cf:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80482d0:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482d1:	5f                   	pop    edi
 80482d2:	73 74                	jae    8048348 <_init-0x34>
 80482d4:	61                   	popa   
 80482d5:	72 74                	jb     804834b <_init-0x31>
 80482d7:	5f                   	pop    edi
 80482d8:	5f                   	pop    edi
 80482d9:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 80482dc:	49                   	dec    ecx
 80482dd:	42                   	inc    edx
 80482de:	43                   	inc    ebx
 80482df:	5f                   	pop    edi
 80482e0:	32 2e                	xor    ch,BYTE PTR [esi]
 80482e2:	37                   	aaa    
 80482e3:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 80482e6:	49                   	dec    ecx
 80482e7:	42                   	inc    edx
 80482e8:	43                   	inc    ebx
 80482e9:	5f                   	pop    edi
 80482ea:	32 2e                	xor    ch,BYTE PTR [esi]
 80482ec:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

080482ee <.gnu.version>:
 80482ee:	00 00                	add    BYTE PTR [eax],al
 80482f0:	02 00                	add    al,BYTE PTR [eax]
 80482f2:	02 00                	add    al,BYTE PTR [eax]
 80482f4:	00 00                	add    BYTE PTR [eax],al
 80482f6:	02 00                	add    al,BYTE PTR [eax]
 80482f8:	02 00                	add    al,BYTE PTR [eax]
 80482fa:	02 00                	add    al,BYTE PTR [eax]
 80482fc:	03 00                	add    eax,DWORD PTR [eax]
 80482fe:	02 00                	add    al,BYTE PTR [eax]
 8048300:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

08048304 <.gnu.version_r>:
 8048304:	01 00                	add    DWORD PTR [eax],eax
 8048306:	02 00                	add    al,BYTE PTR [eax]
 8048308:	01 00                	add    DWORD PTR [eax],eax
 804830a:	00 00                	add    BYTE PTR [eax],al
 804830c:	10 00                	adc    BYTE PTR [eax],al
 804830e:	00 00                	add    BYTE PTR [eax],al
 8048310:	00 00                	add    BYTE PTR [eax],al
 8048312:	00 00                	add    BYTE PTR [eax],al
 8048314:	17                   	pop    ss
 8048315:	69 69 0d 00 00 03 00 	imul   ebp,DWORD PTR [ecx+0xd],0x30000
 804831c:	6a 00                	push   0x0
 804831e:	00 00                	add    BYTE PTR [eax],al
 8048320:	10 00                	adc    BYTE PTR [eax],al
 8048322:	00 00                	add    BYTE PTR [eax],al
 8048324:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 8048327:	0d 00 00 02 00       	or     eax,0x20000
 804832c:	74 00                	je     804832e <_init-0x4e>
 804832e:	00 00                	add    BYTE PTR [eax],al
 8048330:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

08048334 <.rel.dyn>:
 8048334:	fc                   	cld    
 8048335:	9f                   	lahf   
 8048336:	04 08                	add    al,0x8
 8048338:	06                   	push   es
 8048339:	03 00                	add    eax,DWORD PTR [eax]
 804833b:	00 40 a0             	add    BYTE PTR [eax-0x60],al
 804833e:	04 08                	add    al,0x8
 8048340:	05                   	.byte 0x5
 8048341:	08 00                	or     BYTE PTR [eax],al
	...

Disassembly of section .rel.plt:

08048344 <.rel.plt>:
 8048344:	0c a0                	or     al,0xa0
 8048346:	04 08                	add    al,0x8
 8048348:	07                   	pop    es
 8048349:	01 00                	add    DWORD PTR [eax],eax
 804834b:	00 10                	add    BYTE PTR [eax],dl
 804834d:	a0 04 08 07 02       	mov    al,ds:0x2070804
 8048352:	00 00                	add    BYTE PTR [eax],al
 8048354:	14 a0                	adc    al,0xa0
 8048356:	04 08                	add    al,0x8
 8048358:	07                   	pop    es
 8048359:	03 00                	add    eax,DWORD PTR [eax]
 804835b:	00 18                	add    BYTE PTR [eax],bl
 804835d:	a0 04 08 07 04       	mov    al,ds:0x4070804
 8048362:	00 00                	add    BYTE PTR [eax],al
 8048364:	1c a0                	sbb    al,0xa0
 8048366:	04 08                	add    al,0x8
 8048368:	07                   	pop    es
 8048369:	05 00 00 20 a0       	add    eax,0xa0200000
 804836e:	04 08                	add    al,0x8
 8048370:	07                   	pop    es
 8048371:	06                   	push   es
 8048372:	00 00                	add    BYTE PTR [eax],al
 8048374:	24 a0                	and    al,0xa0
 8048376:	04 08                	add    al,0x8
 8048378:	07                   	pop    es
 8048379:	07                   	pop    es
	...

Disassembly of section .init:

0804837c <_init>:
 804837c:	53                   	push   ebx
 804837d:	83 ec 08             	sub    esp,0x8
 8048380:	e8 cb 00 00 00       	call   8048450 <__x86.get_pc_thunk.bx>
 8048385:	81 c3 7b 1c 00 00    	add    ebx,0x1c7b
 804838b:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048391:	85 c0                	test   eax,eax
 8048393:	74 05                	je     804839a <_init+0x1e>
 8048395:	e8 36 00 00 00       	call   80483d0 <__gmon_start__@plt>
 804839a:	83 c4 08             	add    esp,0x8
 804839d:	5b                   	pop    ebx
 804839e:	c3                   	ret    

Disassembly of section .plt:

080483a0 <printf@plt-0x10>:
 80483a0:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 80483a6:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 80483ac:	00 00                	add    BYTE PTR [eax],al
	...

080483b0 <printf@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 80483b6:	68 00 00 00 00       	push   0x0
 80483bb:	e9 e0 ff ff ff       	jmp    80483a0 <_init+0x24>

080483c0 <puts@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 80483c6:	68 08 00 00 00       	push   0x8
 80483cb:	e9 d0 ff ff ff       	jmp    80483a0 <_init+0x24>

080483d0 <__gmon_start__@plt>:
 80483d0:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 80483d6:	68 10 00 00 00       	push   0x10
 80483db:	e9 c0 ff ff ff       	jmp    80483a0 <_init+0x24>

080483e0 <exit@plt>:
 80483e0:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 80483e6:	68 18 00 00 00       	push   0x18
 80483eb:	e9 b0 ff ff ff       	jmp    80483a0 <_init+0x24>

080483f0 <__libc_start_main@plt>:
 80483f0:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 80483f6:	68 20 00 00 00       	push   0x20
 80483fb:	e9 a0 ff ff ff       	jmp    80483a0 <_init+0x24>

08048400 <setvbuf@plt>:
 8048400:	ff 25 20 a0 04 08    	jmp    DWORD PTR ds:0x804a020
 8048406:	68 28 00 00 00       	push   0x28
 804840b:	e9 90 ff ff ff       	jmp    80483a0 <_init+0x24>

08048410 <__isoc99_scanf@plt>:
 8048410:	ff 25 24 a0 04 08    	jmp    DWORD PTR ds:0x804a024
 8048416:	68 30 00 00 00       	push   0x30
 804841b:	e9 80 ff ff ff       	jmp    80483a0 <_init+0x24>

Disassembly of section .text:

08048420 <_start>:
 8048420:	31 ed                	xor    ebp,ebp
 8048422:	5e                   	pop    esi
 8048423:	89 e1                	mov    ecx,esp
 8048425:	83 e4 f0             	and    esp,0xfffffff0
 8048428:	50                   	push   eax
 8048429:	54                   	push   esp
 804842a:	52                   	push   edx
 804842b:	68 30 88 04 08       	push   0x8048830
 8048430:	68 c0 87 04 08       	push   0x80487c0
 8048435:	51                   	push   ecx
 8048436:	56                   	push   esi
 8048437:	68 1d 85 04 08       	push   0x804851d
 804843c:	e8 af ff ff ff       	call   80483f0 <__libc_start_main@plt>
 8048441:	f4                   	hlt    
 8048442:	66 90                	xchg   ax,ax
 8048444:	66 90                	xchg   ax,ax
 8048446:	66 90                	xchg   ax,ax
 8048448:	66 90                	xchg   ax,ax
 804844a:	66 90                	xchg   ax,ax
 804844c:	66 90                	xchg   ax,ax
 804844e:	66 90                	xchg   ax,ax

08048450 <__x86.get_pc_thunk.bx>:
 8048450:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048453:	c3                   	ret    
 8048454:	66 90                	xchg   ax,ax
 8048456:	66 90                	xchg   ax,ax
 8048458:	66 90                	xchg   ax,ax
 804845a:	66 90                	xchg   ax,ax
 804845c:	66 90                	xchg   ax,ax
 804845e:	66 90                	xchg   ax,ax

08048460 <deregister_tm_clones>:
 8048460:	b8 33 a0 04 08       	mov    eax,0x804a033
 8048465:	2d 30 a0 04 08       	sub    eax,0x804a030
 804846a:	83 f8 06             	cmp    eax,0x6
 804846d:	77 01                	ja     8048470 <deregister_tm_clones+0x10>
 804846f:	c3                   	ret    
 8048470:	b8 00 00 00 00       	mov    eax,0x0
 8048475:	85 c0                	test   eax,eax
 8048477:	74 f6                	je     804846f <deregister_tm_clones+0xf>
 8048479:	55                   	push   ebp
 804847a:	89 e5                	mov    ebp,esp
 804847c:	83 ec 18             	sub    esp,0x18
 804847f:	c7 04 24 30 a0 04 08 	mov    DWORD PTR [esp],0x804a030
 8048486:	ff d0                	call   eax
 8048488:	c9                   	leave  
 8048489:	c3                   	ret    
 804848a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048490 <register_tm_clones>:
 8048490:	b8 30 a0 04 08       	mov    eax,0x804a030
 8048495:	2d 30 a0 04 08       	sub    eax,0x804a030
 804849a:	c1 f8 02             	sar    eax,0x2
 804849d:	89 c2                	mov    edx,eax
 804849f:	c1 ea 1f             	shr    edx,0x1f
 80484a2:	01 d0                	add    eax,edx
 80484a4:	d1 f8                	sar    eax,1
 80484a6:	75 01                	jne    80484a9 <register_tm_clones+0x19>
 80484a8:	c3                   	ret    
 80484a9:	ba 00 00 00 00       	mov    edx,0x0
 80484ae:	85 d2                	test   edx,edx
 80484b0:	74 f6                	je     80484a8 <register_tm_clones+0x18>
 80484b2:	55                   	push   ebp
 80484b3:	89 e5                	mov    ebp,esp
 80484b5:	83 ec 18             	sub    esp,0x18
 80484b8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80484bc:	c7 04 24 30 a0 04 08 	mov    DWORD PTR [esp],0x804a030
 80484c3:	ff d2                	call   edx
 80484c5:	c9                   	leave  
 80484c6:	c3                   	ret    
 80484c7:	89 f6                	mov    esi,esi
 80484c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080484d0 <__do_global_dtors_aux>:
 80484d0:	80 3d 44 a0 04 08 00 	cmp    BYTE PTR ds:0x804a044,0x0
 80484d7:	75 13                	jne    80484ec <__do_global_dtors_aux+0x1c>
 80484d9:	55                   	push   ebp
 80484da:	89 e5                	mov    ebp,esp
 80484dc:	83 ec 08             	sub    esp,0x8
 80484df:	e8 7c ff ff ff       	call   8048460 <deregister_tm_clones>
 80484e4:	c6 05 44 a0 04 08 01 	mov    BYTE PTR ds:0x804a044,0x1
 80484eb:	c9                   	leave  
 80484ec:	f3 c3                	repz ret 
 80484ee:	66 90                	xchg   ax,ax

080484f0 <frame_dummy>:
 80484f0:	a1 10 9f 04 08       	mov    eax,ds:0x8049f10
 80484f5:	85 c0                	test   eax,eax
 80484f7:	74 1f                	je     8048518 <frame_dummy+0x28>
 80484f9:	b8 00 00 00 00       	mov    eax,0x0
 80484fe:	85 c0                	test   eax,eax
 8048500:	74 16                	je     8048518 <frame_dummy+0x28>
 8048502:	55                   	push   ebp
 8048503:	89 e5                	mov    ebp,esp
 8048505:	83 ec 18             	sub    esp,0x18
 8048508:	c7 04 24 10 9f 04 08 	mov    DWORD PTR [esp],0x8049f10
 804850f:	ff d0                	call   eax
 8048511:	c9                   	leave  
 8048512:	e9 79 ff ff ff       	jmp    8048490 <register_tm_clones>
 8048517:	90                   	nop
 8048518:	e9 73 ff ff ff       	jmp    8048490 <register_tm_clones>

0804851d <main>:
 804851d:	55                   	push   ebp
 804851e:	89 e5                	mov    ebp,esp
 8048520:	83 e4 f0             	and    esp,0xfffffff0
 8048523:	81 ec 40 03 00 00    	sub    esp,0x340
 8048529:	a1 40 a0 04 08       	mov    eax,ds:0x804a040
 804852e:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
 8048535:	00 
 8048536:	c7 44 24 08 02 00 00 	mov    DWORD PTR [esp+0x8],0x2
 804853d:	00 
 804853e:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 8048545:	00 
 8048546:	89 04 24             	mov    DWORD PTR [esp],eax
 8048549:	e8 b2 fe ff ff       	call   8048400 <setvbuf@plt>
 804854e:	c7 04 24 50 88 04 08 	mov    DWORD PTR [esp],0x8048850
 8048555:	e8 56 fe ff ff       	call   80483b0 <printf@plt>
 804855a:	8d 44 24 14          	lea    eax,[esp+0x14]
 804855e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048562:	c7 04 24 60 88 04 08 	mov    DWORD PTR [esp],0x8048860
 8048569:	e8 a2 fe ff ff       	call   8048410 <__isoc99_scanf@plt>
 804856e:	c7 04 24 63 88 04 08 	mov    DWORD PTR [esp],0x8048863
 8048575:	e8 36 fe ff ff       	call   80483b0 <printf@plt>
 804857a:	8d 44 24 10          	lea    eax,[esp+0x10]
 804857e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048582:	c7 04 24 60 88 04 08 	mov    DWORD PTR [esp],0x8048860
 8048589:	e8 82 fe ff ff       	call   8048410 <__isoc99_scanf@plt>
 804858e:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
 8048592:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 8048596:	0f af c2             	imul   eax,edx
 8048599:	3d c8 00 00 00       	cmp    eax,0xc8
 804859e:	76 18                	jbe    80485b8 <main+0x9b>
 80485a0:	c7 04 24 76 88 04 08 	mov    DWORD PTR [esp],0x8048876
 80485a7:	e8 14 fe ff ff       	call   80483c0 <puts@plt>
 80485ac:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 80485b3:	e8 28 fe ff ff       	call   80483e0 <exit@plt>
 80485b8:	c7 04 24 86 88 04 08 	mov    DWORD PTR [esp],0x8048886
 80485bf:	e8 ec fd ff ff       	call   80483b0 <printf@plt>
 80485c4:	c7 84 24 3c 03 00 00 	mov    DWORD PTR [esp+0x33c],0x0
 80485cb:	00 00 00 00 
 80485cf:	eb 46                	jmp    8048617 <main+0xfa>
 80485d1:	8b 84 24 3c 03 00 00 	mov    eax,DWORD PTR [esp+0x33c]
 80485d8:	c1 e0 02             	shl    eax,0x2
 80485db:	05 80 a3 04 08       	add    eax,0x804a380
 80485e0:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80485e4:	c7 04 24 60 88 04 08 	mov    DWORD PTR [esp],0x8048860
 80485eb:	e8 20 fe ff ff       	call   8048410 <__isoc99_scanf@plt>
 80485f0:	8b 84 24 3c 03 00 00 	mov    eax,DWORD PTR [esp+0x33c]
 80485f7:	8b 04 85 80 a3 04 08 	mov    eax,DWORD PTR [eax*4+0x804a380]
 80485fe:	85 c0                	test   eax,eax
 8048600:	75 0d                	jne    804860f <main+0xf2>
 8048602:	8b 84 24 3c 03 00 00 	mov    eax,DWORD PTR [esp+0x33c]
 8048609:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
 804860d:	eb 15                	jmp    8048624 <main+0x107>
 804860f:	83 84 24 3c 03 00 00 	add    DWORD PTR [esp+0x33c],0x1
 8048616:	01 
 8048617:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
 804861b:	39 84 24 3c 03 00 00 	cmp    DWORD PTR [esp+0x33c],eax
 8048622:	72 ad                	jb     80485d1 <main+0xb4>
 8048624:	c7 04 24 8c 88 04 08 	mov    DWORD PTR [esp],0x804888c
 804862b:	e8 80 fd ff ff       	call   80483b0 <printf@plt>
 8048630:	c7 84 24 3c 03 00 00 	mov    DWORD PTR [esp+0x33c],0x0
 8048637:	00 00 00 00 
 804863b:	eb 46                	jmp    8048683 <main+0x166>
 804863d:	8b 84 24 3c 03 00 00 	mov    eax,DWORD PTR [esp+0x33c]
 8048644:	c1 e0 02             	shl    eax,0x2
 8048647:	05 60 a0 04 08       	add    eax,0x804a060
 804864c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048650:	c7 04 24 60 88 04 08 	mov    DWORD PTR [esp],0x8048860
 8048657:	e8 b4 fd ff ff       	call   8048410 <__isoc99_scanf@plt>
 804865c:	8b 84 24 3c 03 00 00 	mov    eax,DWORD PTR [esp+0x33c]
 8048663:	8b 04 85 60 a0 04 08 	mov    eax,DWORD PTR [eax*4+0x804a060]
 804866a:	85 c0                	test   eax,eax
 804866c:	75 0d                	jne    804867b <main+0x15e>
 804866e:	8b 84 24 3c 03 00 00 	mov    eax,DWORD PTR [esp+0x33c]
 8048675:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
 8048679:	eb 15                	jmp    8048690 <main+0x173>
 804867b:	83 84 24 3c 03 00 00 	add    DWORD PTR [esp+0x33c],0x1
 8048682:	01 
 8048683:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 8048687:	39 84 24 3c 03 00 00 	cmp    DWORD PTR [esp+0x33c],eax
 804868e:	72 ad                	jb     804863d <main+0x120>
 8048690:	c7 84 24 3c 03 00 00 	mov    DWORD PTR [esp+0x33c],0x0
 8048697:	00 00 00 00 
 804869b:	eb 64                	jmp    8048701 <main+0x1e4>
 804869d:	c7 84 24 38 03 00 00 	mov    DWORD PTR [esp+0x338],0x0
 80486a4:	00 00 00 00 
 80486a8:	eb 42                	jmp    80486ec <main+0x1cf>
 80486aa:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 80486ae:	0f af 84 24 3c 03 00 	imul   eax,DWORD PTR [esp+0x33c]
 80486b5:	00 
 80486b6:	89 c2                	mov    edx,eax
 80486b8:	8b 84 24 38 03 00 00 	mov    eax,DWORD PTR [esp+0x338]
 80486bf:	01 c2                	add    edx,eax
 80486c1:	8b 84 24 3c 03 00 00 	mov    eax,DWORD PTR [esp+0x33c]
 80486c8:	8b 0c 85 80 a3 04 08 	mov    ecx,DWORD PTR [eax*4+0x804a380]
 80486cf:	8b 84 24 38 03 00 00 	mov    eax,DWORD PTR [esp+0x338]
 80486d6:	8b 04 85 60 a0 04 08 	mov    eax,DWORD PTR [eax*4+0x804a060]
 80486dd:	0f af c1             	imul   eax,ecx
 80486e0:	89 44 94 18          	mov    DWORD PTR [esp+edx*4+0x18],eax
 80486e4:	83 84 24 38 03 00 00 	add    DWORD PTR [esp+0x338],0x1
 80486eb:	01 
 80486ec:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 80486f0:	39 84 24 38 03 00 00 	cmp    DWORD PTR [esp+0x338],eax
 80486f7:	72 b1                	jb     80486aa <main+0x18d>
 80486f9:	83 84 24 3c 03 00 00 	add    DWORD PTR [esp+0x33c],0x1
 8048700:	01 
 8048701:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
 8048705:	39 84 24 3c 03 00 00 	cmp    DWORD PTR [esp+0x33c],eax
 804870c:	72 8f                	jb     804869d <main+0x180>
 804870e:	c7 84 24 3c 03 00 00 	mov    DWORD PTR [esp+0x33c],0x0
 8048715:	00 00 00 00 
 8048719:	e9 86 00 00 00       	jmp    80487a4 <main+0x287>
 804871e:	c7 84 24 38 03 00 00 	mov    DWORD PTR [esp+0x338],0x0
 8048725:	00 00 00 00 
 8048729:	eb 58                	jmp    8048783 <main+0x266>
 804872b:	8b 84 24 38 03 00 00 	mov    eax,DWORD PTR [esp+0x338]
 8048732:	8b 94 24 3c 03 00 00 	mov    edx,DWORD PTR [esp+0x33c]
 8048739:	01 d0                	add    eax,edx
 804873b:	83 e0 01             	and    eax,0x1
 804873e:	85 c0                	test   eax,eax
 8048740:	75 2d                	jne    804876f <main+0x252>
 8048742:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 8048746:	0f af 84 24 3c 03 00 	imul   eax,DWORD PTR [esp+0x33c]
 804874d:	00 
 804874e:	89 c2                	mov    edx,eax
 8048750:	8b 84 24 38 03 00 00 	mov    eax,DWORD PTR [esp+0x338]
 8048757:	01 d0                	add    eax,edx
 8048759:	8b 44 84 18          	mov    eax,DWORD PTR [esp+eax*4+0x18]
 804875d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048761:	c7 04 24 95 88 04 08 	mov    DWORD PTR [esp],0x8048895
 8048768:	e8 43 fc ff ff       	call   80483b0 <printf@plt>
 804876d:	eb 0c                	jmp    804877b <main+0x25e>
 804876f:	c7 04 24 99 88 04 08 	mov    DWORD PTR [esp],0x8048899
 8048776:	e8 35 fc ff ff       	call   80483b0 <printf@plt>
 804877b:	83 84 24 38 03 00 00 	add    DWORD PTR [esp+0x338],0x1
 8048782:	01 
 8048783:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
 8048787:	39 84 24 38 03 00 00 	cmp    DWORD PTR [esp+0x338],eax
 804878e:	72 9b                	jb     804872b <main+0x20e>
 8048790:	c7 04 24 9d 88 04 08 	mov    DWORD PTR [esp],0x804889d
 8048797:	e8 24 fc ff ff       	call   80483c0 <puts@plt>
 804879c:	83 84 24 3c 03 00 00 	add    DWORD PTR [esp+0x33c],0x1
 80487a3:	01 
 80487a4:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
 80487a8:	39 84 24 3c 03 00 00 	cmp    DWORD PTR [esp+0x33c],eax
 80487af:	0f 82 69 ff ff ff    	jb     804871e <main+0x201>
 80487b5:	b8 00 00 00 00       	mov    eax,0x0
 80487ba:	c9                   	leave  
 80487bb:	c3                   	ret    
 80487bc:	66 90                	xchg   ax,ax
 80487be:	66 90                	xchg   ax,ax

080487c0 <__libc_csu_init>:
 80487c0:	55                   	push   ebp
 80487c1:	57                   	push   edi
 80487c2:	31 ff                	xor    edi,edi
 80487c4:	56                   	push   esi
 80487c5:	53                   	push   ebx
 80487c6:	e8 85 fc ff ff       	call   8048450 <__x86.get_pc_thunk.bx>
 80487cb:	81 c3 35 18 00 00    	add    ebx,0x1835
 80487d1:	83 ec 1c             	sub    esp,0x1c
 80487d4:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 80487d8:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 80487de:	e8 99 fb ff ff       	call   804837c <_init>
 80487e3:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 80487e9:	29 c6                	sub    esi,eax
 80487eb:	c1 fe 02             	sar    esi,0x2
 80487ee:	85 f6                	test   esi,esi
 80487f0:	74 27                	je     8048819 <__libc_csu_init+0x59>
 80487f2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80487f8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 80487fc:	89 2c 24             	mov    DWORD PTR [esp],ebp
 80487ff:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048803:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 8048807:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804880b:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 8048812:	83 c7 01             	add    edi,0x1
 8048815:	39 f7                	cmp    edi,esi
 8048817:	75 df                	jne    80487f8 <__libc_csu_init+0x38>
 8048819:	83 c4 1c             	add    esp,0x1c
 804881c:	5b                   	pop    ebx
 804881d:	5e                   	pop    esi
 804881e:	5f                   	pop    edi
 804881f:	5d                   	pop    ebp
 8048820:	c3                   	ret    
 8048821:	eb 0d                	jmp    8048830 <__libc_csu_fini>
 8048823:	90                   	nop
 8048824:	90                   	nop
 8048825:	90                   	nop
 8048826:	90                   	nop
 8048827:	90                   	nop
 8048828:	90                   	nop
 8048829:	90                   	nop
 804882a:	90                   	nop
 804882b:	90                   	nop
 804882c:	90                   	nop
 804882d:	90                   	nop
 804882e:	90                   	nop
 804882f:	90                   	nop

08048830 <__libc_csu_fini>:
 8048830:	f3 c3                	repz ret 

Disassembly of section .fini:

08048834 <_fini>:
 8048834:	53                   	push   ebx
 8048835:	83 ec 08             	sub    esp,0x8
 8048838:	e8 13 fc ff ff       	call   8048450 <__x86.get_pc_thunk.bx>
 804883d:	81 c3 c3 17 00 00    	add    ebx,0x17c3
 8048843:	83 c4 08             	add    esp,0x8
 8048846:	5b                   	pop    ebx
 8048847:	c3                   	ret    

Disassembly of section .rodata:

08048848 <_fp_hw>:
 8048848:	03 00                	add    eax,DWORD PTR [eax]
	...

0804884c <_IO_stdin_used>:
 804884c:	01 00                	add    DWORD PTR [eax],eax
 804884e:	02 00                	add    al,BYTE PTR [eax]
 8048850:	4e                   	dec    esi
 8048851:	75 6d                	jne    80488c0 <_IO_stdin_used+0x74>
 8048853:	62 65 72             	bound  esp,QWORD PTR [ebp+0x72]
 8048856:	20 6f 66             	and    BYTE PTR [edi+0x66],ch
 8048859:	20 72 6f             	and    BYTE PTR [edx+0x6f],dh
 804885c:	77 3a                	ja     8048898 <_IO_stdin_used+0x4c>
 804885e:	20 00                	and    BYTE PTR [eax],al
 8048860:	25 75 00 4e 75       	and    eax,0x754e0075
 8048865:	6d                   	ins    DWORD PTR es:[edi],dx
 8048866:	62 65 72             	bound  esp,QWORD PTR [ebp+0x72]
 8048869:	20 6f 66             	and    BYTE PTR [edi+0x66],ch
 804886c:	20 63 6f             	and    BYTE PTR [ebx+0x6f],ah
 804886f:	6c                   	ins    BYTE PTR es:[edi],dx
 8048870:	75 6d                	jne    80488df <_IO_stdin_used+0x93>
 8048872:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048873:	3a 20                	cmp    ah,BYTE PTR [eax]
 8048875:	00 53 69             	add    BYTE PTR [ebx+0x69],dl
 8048878:	7a 65                	jp     80488df <_IO_stdin_used+0x93>
 804887a:	20 74 6f 6f          	and    BYTE PTR [edi+ebp*2+0x6f],dh
 804887e:	20 6c 61 72          	and    BYTE PTR [ecx+eiz*2+0x72],ch
 8048882:	67 65 21 00          	and    DWORD PTR gs:[bx+si],eax
 8048886:	52                   	push   edx
 8048887:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8048888:	77 3a                	ja     80488c4 <_IO_stdin_used+0x78>
 804888a:	20 00                	and    BYTE PTR [eax],al
 804888c:	43                   	inc    ebx
 804888d:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804888e:	6c                   	ins    BYTE PTR es:[edi],dx
 804888f:	75 6d                	jne    80488fe <_IO_stdin_used+0xb2>
 8048891:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048892:	3a 20                	cmp    ah,BYTE PTR [eax]
 8048894:	00 25 33 64 00 20    	add    BYTE PTR ds:0x20006433,ah
 804889a:	2e 20 00             	and    BYTE PTR cs:[eax],al
	...

Disassembly of section .eh_frame_hdr:

080488a0 <.eh_frame_hdr>:
 80488a0:	01 1b                	add    DWORD PTR [ebx],ebx
 80488a2:	03 3b                	add    edi,DWORD PTR [ebx]
 80488a4:	28 00                	sub    BYTE PTR [eax],al
 80488a6:	00 00                	add    BYTE PTR [eax],al
 80488a8:	04 00                	add    al,0x0
 80488aa:	00 00                	add    BYTE PTR [eax],al
 80488ac:	00 fb                	add    bl,bh
 80488ae:	ff                   	(bad)  
 80488af:	ff 44 00 00          	inc    DWORD PTR [eax+eax*1+0x0]
 80488b3:	00 7d fc             	add    BYTE PTR [ebp-0x4],bh
 80488b6:	ff                   	(bad)  
 80488b7:	ff 68 00             	jmp    FWORD PTR [eax+0x0]
 80488ba:	00 00                	add    BYTE PTR [eax],al
 80488bc:	20 ff                	and    bh,bh
 80488be:	ff                   	(bad)  
 80488bf:	ff 88 00 00 00 90    	dec    DWORD PTR [eax-0x70000000]
 80488c5:	ff                   	(bad)  
 80488c6:	ff                   	(bad)  
 80488c7:	ff c4                	inc    esp
 80488c9:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

080488cc <__FRAME_END__-0xac>:
 80488cc:	14 00                	adc    al,0x0
 80488ce:	00 00                	add    BYTE PTR [eax],al
 80488d0:	00 00                	add    BYTE PTR [eax],al
 80488d2:	00 00                	add    BYTE PTR [eax],al
 80488d4:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 80488d7:	00 01                	add    BYTE PTR [ecx],al
 80488d9:	7c 08                	jl     80488e3 <_IO_stdin_used+0x97>
 80488db:	01 1b                	add    DWORD PTR [ebx],ebx
 80488dd:	0c 04                	or     al,0x4
 80488df:	04 88                	add    al,0x88
 80488e1:	01 00                	add    DWORD PTR [eax],eax
 80488e3:	00 20                	add    BYTE PTR [eax],ah
 80488e5:	00 00                	add    BYTE PTR [eax],al
 80488e7:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80488ea:	00 00                	add    BYTE PTR [eax],al
 80488ec:	b4 fa                	mov    ah,0xfa
 80488ee:	ff                   	(bad)  
 80488ef:	ff 80 00 00 00 00    	inc    DWORD PTR [eax+0x0]
 80488f5:	0e                   	push   cs
 80488f6:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 80488f9:	0c 4a                	or     al,0x4a
 80488fb:	0f 0b                	ud2    
 80488fd:	74 04                	je     8048903 <_IO_stdin_used+0xb7>
 80488ff:	78 00                	js     8048901 <_IO_stdin_used+0xb5>
 8048901:	3f                   	aas    
 8048902:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 8048904:	2a 32                	sub    dh,BYTE PTR [edx]
 8048906:	24 22                	and    al,0x22
 8048908:	1c 00                	sbb    al,0x0
 804890a:	00 00                	add    BYTE PTR [eax],al
 804890c:	40                   	inc    eax
 804890d:	00 00                	add    BYTE PTR [eax],al
 804890f:	00 0d fc ff ff 9f    	add    BYTE PTR ds:0x9ffffffc,cl
 8048915:	02 00                	add    al,BYTE PTR [eax]
 8048917:	00 00                	add    BYTE PTR [eax],al
 8048919:	41                   	inc    ecx
 804891a:	0e                   	push   cs
 804891b:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048921:	03 9b 02 c5 0c 04    	add    ebx,DWORD PTR [ebx+0x40cc502]
 8048927:	04 38                	add    al,0x38
 8048929:	00 00                	add    BYTE PTR [eax],al
 804892b:	00 60 00             	add    BYTE PTR [eax+0x0],ah
 804892e:	00 00                	add    BYTE PTR [eax],al
 8048930:	90                   	nop
 8048931:	fe                   	(bad)  
 8048932:	ff                   	(bad)  
 8048933:	ff 61 00             	jmp    DWORD PTR [ecx+0x0]
 8048936:	00 00                	add    BYTE PTR [eax],al
 8048938:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 804893b:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 8048941:	87 03                	xchg   DWORD PTR [ebx],eax
 8048943:	43                   	inc    ebx
 8048944:	0e                   	push   cs
 8048945:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 804894b:	83 05 4e 0e 30 02 48 	add    DWORD PTR ds:0x2300e4e,0x48
 8048952:	0e                   	push   cs
 8048953:	14 41                	adc    al,0x41
 8048955:	c3                   	ret    
 8048956:	0e                   	push   cs
 8048957:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 804895a:	0e                   	push   cs
 804895b:	0c 41                	or     al,0x41
 804895d:	c7                   	(bad)  
 804895e:	0e                   	push   cs
 804895f:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 8048962:	0e                   	push   cs
 8048963:	04 10                	add    al,0x10
 8048965:	00 00                	add    BYTE PTR [eax],al
 8048967:	00 9c 00 00 00 c4 fe 	add    BYTE PTR [eax+eax*1-0x13c0000],bl
 804896e:	ff                   	(bad)  
 804896f:	ff 02                	inc    DWORD PTR [edx]
 8048971:	00 00                	add    BYTE PTR [eax],al
 8048973:	00 00                	add    BYTE PTR [eax],al
 8048975:	00 00                	add    BYTE PTR [eax],al
	...

08048978 <__FRAME_END__>:
 8048978:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	f0 84 04 08          	lock test BYTE PTR [eax+ecx*1],al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	d0                   	.byte 0xd0
 8049f0d:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    DWORD PTR [eax],eax
 8049f16:	00 00                	add    BYTE PTR [eax],al
 8049f18:	01 00                	add    DWORD PTR [eax],eax
 8049f1a:	00 00                	add    BYTE PTR [eax],al
 8049f1c:	0c 00                	or     al,0x0
 8049f1e:	00 00                	add    BYTE PTR [eax],al
 8049f20:	7c 83                	jl     8049ea5 <__FRAME_END__+0x152d>
 8049f22:	04 08                	add    al,0x8
 8049f24:	0d 00 00 00 34       	or     eax,0x34000000
 8049f29:	88 04 08             	mov    BYTE PTR [eax+ecx*1],al
 8049f2c:	19 00                	sbb    DWORD PTR [eax],eax
 8049f2e:	00 00                	add    BYTE PTR [eax],al
 8049f30:	08 9f 04 08 1b 00    	or     BYTE PTR [edi+0x1b0804],bl
 8049f36:	00 00                	add    BYTE PTR [eax],al
 8049f38:	04 00                	add    al,0x0
 8049f3a:	00 00                	add    BYTE PTR [eax],al
 8049f3c:	1a 00                	sbb    al,BYTE PTR [eax]
 8049f3e:	00 00                	add    BYTE PTR [eax],al
 8049f40:	0c 9f                	or     al,0x9f
 8049f42:	04 08                	add    al,0x8
 8049f44:	1c 00                	sbb    al,0x0
 8049f46:	00 00                	add    BYTE PTR [eax],al
 8049f48:	04 00                	add    al,0x0
 8049f4a:	00 00                	add    BYTE PTR [eax],al
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
 8049f51:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049f58:	70 82                	jo     8049edc <__FRAME_END__+0x1564>
 8049f5a:	04 08                	add    al,0x8
 8049f5c:	06                   	push   es
 8049f5d:	00 00                	add    BYTE PTR [eax],al
 8049f5f:	00 d0                	add    al,dl
 8049f61:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 8049f68:	7e 00                	jle    8049f6a <_DYNAMIC+0x56>
 8049f6a:	00 00                	add    BYTE PTR [eax],al
 8049f6c:	0b 00                	or     eax,DWORD PTR [eax]
 8049f6e:	00 00                	add    BYTE PTR [eax],al
 8049f70:	10 00                	adc    BYTE PTR [eax],al
 8049f72:	00 00                	add    BYTE PTR [eax],al
 8049f74:	15 00 00 00 00       	adc    eax,0x0
 8049f79:	00 00                	add    BYTE PTR [eax],al
 8049f7b:	00 03                	add    BYTE PTR [ebx],al
 8049f7d:	00 00                	add    BYTE PTR [eax],al
 8049f7f:	00 00                	add    BYTE PTR [eax],al
 8049f81:	a0 04 08 02 00       	mov    al,ds:0x20804
 8049f86:	00 00                	add    BYTE PTR [eax],al
 8049f88:	38 00                	cmp    BYTE PTR [eax],al
 8049f8a:	00 00                	add    BYTE PTR [eax],al
 8049f8c:	14 00                	adc    al,0x0
 8049f8e:	00 00                	add    BYTE PTR [eax],al
 8049f90:	11 00                	adc    DWORD PTR [eax],eax
 8049f92:	00 00                	add    BYTE PTR [eax],al
 8049f94:	17                   	pop    ss
 8049f95:	00 00                	add    BYTE PTR [eax],al
 8049f97:	00 44 83 04          	add    BYTE PTR [ebx+eax*4+0x4],al
 8049f9b:	08 11                	or     BYTE PTR [ecx],dl
 8049f9d:	00 00                	add    BYTE PTR [eax],al
 8049f9f:	00 34 83             	add    BYTE PTR [ebx+eax*4],dh
 8049fa2:	04 08                	add    al,0x8
 8049fa4:	12 00                	adc    al,BYTE PTR [eax]
 8049fa6:	00 00                	add    BYTE PTR [eax],al
 8049fa8:	10 00                	adc    BYTE PTR [eax],al
 8049faa:	00 00                	add    BYTE PTR [eax],al
 8049fac:	13 00                	adc    eax,DWORD PTR [eax]
 8049fae:	00 00                	add    BYTE PTR [eax],al
 8049fb0:	08 00                	or     BYTE PTR [eax],al
 8049fb2:	00 00                	add    BYTE PTR [eax],al
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 04             	jmp    FWORD PTR [edi+0x4]
 8049fb9:	83 04 08 ff          	add    DWORD PTR [eax+ecx*1],0xffffffff
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 8049fc1:	00 00                	add    BYTE PTR [eax],al
 8049fc3:	00 f0                	add    al,dh
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f ee             	jmp    FWORD PTR [edi-0x12]
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    al,0x8
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    al,0x9f
 804a002:	04 08                	add    al,0x8
	...
 804a00c:	b6 83                	mov    dh,0x83
 804a00e:	04 08                	add    al,0x8
 804a010:	c6 83 04 08 d6 83 04 	mov    BYTE PTR [ebx-0x7c29f7fc],0x4
 804a017:	08 e6                	or     dh,ah
 804a019:	83 04 08 f6          	add    DWORD PTR [eax+ecx*1],0xfffffff6
 804a01d:	83 04 08 06          	add    DWORD PTR [eax+ecx*1],0x6
 804a021:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 804a024:	16                   	push   ss
 804a025:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .data:

0804a028 <__data_start>:
 804a028:	00 00                	add    BYTE PTR [eax],al
	...

0804a02c <__dso_handle>:
 804a02c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0804a040 <stdout@@GLIBC_2.0>:
 804a040:	00 00                	add    BYTE PTR [eax],al
	...

0804a044 <completed.6591>:
	...

0804a060 <b>:
	...

0804a380 <a>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x8048304>
   a:	74 75                	je     81 <_init-0x80482fb>
   c:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
   f:	38 2e                	cmp    BYTE PTR [esi],ch
  11:	34 2d                	xor    al,0x2d
  13:	32 75 62             	xor    dh,BYTE PTR [ebp+0x62]
  16:	75 6e                	jne    86 <_init-0x80482f6>
  18:	74 75                	je     8f <_init-0x80482ed>
  1a:	31 7e 31             	xor    DWORD PTR [esi+0x31],edi
  1d:	34 2e                	xor    al,0x2e
  1f:	30 34 29             	xor    BYTE PTR [ecx+ebp*1],dh
  22:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  25:	38 2e                	cmp    BYTE PTR [esi],ch
  27:	34 00                	xor    al,0x0
  29:	47                   	inc    edi
  2a:	43                   	inc    ebx
  2b:	43                   	inc    ebx
  2c:	3a 20                	cmp    ah,BYTE PTR [eax]
  2e:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  31:	75 6e                	jne    a1 <_init-0x80482db>
  33:	74 75                	je     aa <_init-0x80482d2>
  35:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  38:	38 2e                	cmp    BYTE PTR [esi],ch
  3a:	32 2d 31 39 75 62    	xor    ch,BYTE PTR ds:0x62753931
  40:	75 6e                	jne    b0 <_init-0x80482cc>
  42:	74 75                	je     b9 <_init-0x80482c3>
  44:	31 29                	xor    DWORD PTR [ecx],ebp
  46:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  49:	38 2e                	cmp    BYTE PTR [esi],ch
  4b:	32 00                	xor    al,BYTE PTR [eax]
