
xorflag:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	ins    BYTE PTR es:[edi],dx
 8048156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804815d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	10 00                	adc    BYTE PTR [eax],al
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	01 00                	add    DWORD PTR [eax],eax
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 00                	add    BYTE PTR [eax],al
 8048179:	00 00                	add    BYTE PTR [eax],al
 804817b:	00 02                	add    BYTE PTR [edx],al
 804817d:	00 00                	add    BYTE PTR [eax],al
 804817f:	00 06                	add    BYTE PTR [esi],al
 8048181:	00 00                	add    BYTE PTR [eax],al
 8048183:	00 18                	add    BYTE PTR [eax],bl
 8048185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    al,0x0
 804818a:	00 00                	add    BYTE PTR [eax],al
 804818c:	14 00                	adc    al,0x0
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	47                   	inc    edi
 8048195:	4e                   	dec    esi
 8048196:	55                   	push   ebp
 8048197:	00 3a                	add    BYTE PTR [edx],bh
 8048199:	d0 5d 79             	rcr    BYTE PTR [ebp+0x79],1
 804819c:	c5 05 d6 20 13 67    	lds    eax,FWORD PTR ds:0x671320d6
 80481a2:	62 92 85 bd 59 76    	bound  edx,QWORD PTR [edx+0x7659bd85]
 80481a8:	a5                   	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 80481a9:	7c 17                	jl     80481c2 <_init-0x18e>
 80481ab:	0b                   	.byte 0xb

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    al,BYTE PTR [eax]
 80481ae:	00 00                	add    BYTE PTR [eax],al
 80481b0:	09 00                	or     DWORD PTR [eax],eax
 80481b2:	00 00                	add    BYTE PTR [eax],al
 80481b4:	01 00                	add    DWORD PTR [eax],eax
 80481b6:	00 00                	add    BYTE PTR [eax],al
 80481b8:	05 00 00 00 00       	add    eax,0x0
 80481bd:	20 00                	and    BYTE PTR [eax],al
 80481bf:	20 00                	and    BYTE PTR [eax],al
 80481c1:	00 00                	add    BYTE PTR [eax],al
 80481c3:	00 09                	add    BYTE PTR [ecx],cl
 80481c5:	00 00                	add    BYTE PTR [eax],al
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 80481c9:	4b                   	dec    ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x1c4>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1f                   	pop    ds
	...
 80481e5:	00 00                	add    BYTE PTR [eax],al
 80481e7:	00 12                	add    BYTE PTR [edx],dl
 80481e9:	00 00                	add    BYTE PTR [eax],al
 80481eb:	00 4c 00 00          	add    BYTE PTR [eax+eax*1+0x0],cl
	...
 80481f7:	00 20                	add    BYTE PTR [eax],ah
 80481f9:	00 00                	add    BYTE PTR [eax],al
 80481fb:	00 1a                	add    BYTE PTR [edx],bl
	...
 8048205:	00 00                	add    BYTE PTR [eax],al
 8048207:	00 12                	add    BYTE PTR [edx],dl
 8048209:	00 00                	add    BYTE PTR [eax],al
 804820b:	00 2f                	add    BYTE PTR [edi],ch
	...
 8048215:	00 00                	add    BYTE PTR [eax],al
 8048217:	00 12                	add    BYTE PTR [edx],dl
 8048219:	00 00                	add    BYTE PTR [eax],al
 804821b:	00 34 00             	add    BYTE PTR [eax+eax*1],dh
	...
 8048226:	00 00                	add    BYTE PTR [eax],al
 8048228:	12 00                	adc    al,BYTE PTR [eax]
 804822a:	00 00                	add    BYTE PTR [eax],al
 804822c:	46                   	inc    esi
	...
 8048235:	00 00                	add    BYTE PTR [eax],al
 8048237:	00 12                	add    BYTE PTR [edx],dl
 8048239:	00 00                	add    BYTE PTR [eax],al
 804823b:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
	...
 8048246:	00 00                	add    BYTE PTR [eax],al
 8048248:	12 00                	adc    al,BYTE PTR [eax]
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	29 00                	sub    DWORD PTR [eax],eax
	...
 8048256:	00 00                	add    BYTE PTR [eax],al
 8048258:	12 00                	adc    al,BYTE PTR [eax]
 804825a:	00 00                	add    BYTE PTR [eax],al
 804825c:	0b 00                	or     eax,DWORD PTR [eax]
 804825e:	00 00                	add    BYTE PTR [eax],al
 8048260:	0c 87                	or     al,0x87
 8048262:	04 08                	add    al,0x8
 8048264:	04 00                	add    al,0x0
 8048266:	00 00                	add    BYTE PTR [eax],al
 8048268:	11 00                	adc    DWORD PTR [eax],eax
 804826a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804826c <.dynstr>:
 804826c:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 8048270:	63 2e                	arpl   WORD PTR [esi],bp
 8048272:	73 6f                	jae    80482e3 <_init-0x6d>
 8048274:	2e 36 00 5f 49       	cs add BYTE PTR cs:ss:[edi+0x49],bl
 8048279:	4f                   	dec    edi
 804827a:	5f                   	pop    edi
 804827b:	73 74                	jae    80482f1 <_init-0x5f>
 804827d:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048284:	64 
 8048285:	00 65 78             	add    BYTE PTR [ebp+0x78],ah
 8048288:	69 74 00 72 65 61 64 	imul   esi,DWORD PTR [eax+eax*1+0x72],0x646165
 804828f:	00 
 8048290:	61                   	popa   
 8048291:	74 6f                	je     8048302 <_init-0x4e>
 8048293:	69 00 63 6c 6f 73    	imul   eax,DWORD PTR [eax],0x736f6c63
 8048299:	65 00 6f 70          	add    BYTE PTR gs:[edi+0x70],ch
 804829d:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 804829f:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 80482a2:	6c                   	ins    BYTE PTR es:[edi],dx
 80482a3:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 80482aa:	72 74                	jb     8048320 <_init-0x30>
 80482ac:	5f                   	pop    edi
 80482ad:	6d                   	ins    DWORD PTR es:[edi],dx
 80482ae:	61                   	popa   
 80482af:	69 6e 00 77 72 69 74 	imul   ebp,DWORD PTR [esi+0x0],0x74697277
 80482b6:	65 00 5f 5f          	add    BYTE PTR gs:[edi+0x5f],bl
 80482ba:	67 6d                	ins    DWORD PTR es:[di],dx
 80482bc:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80482bd:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482be:	5f                   	pop    edi
 80482bf:	73 74                	jae    8048335 <_init-0x1b>
 80482c1:	61                   	popa   
 80482c2:	72 74                	jb     8048338 <_init-0x18>
 80482c4:	5f                   	pop    edi
 80482c5:	5f                   	pop    edi
 80482c6:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 80482c9:	49                   	dec    ecx
 80482ca:	42                   	inc    edx
 80482cb:	43                   	inc    ebx
 80482cc:	5f                   	pop    edi
 80482cd:	32 2e                	xor    ch,BYTE PTR [esi]
 80482cf:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

080482d2 <.gnu.version>:
 80482d2:	00 00                	add    BYTE PTR [eax],al
 80482d4:	02 00                	add    al,BYTE PTR [eax]
 80482d6:	00 00                	add    BYTE PTR [eax],al
 80482d8:	02 00                	add    al,BYTE PTR [eax]
 80482da:	02 00                	add    al,BYTE PTR [eax]
 80482dc:	02 00                	add    al,BYTE PTR [eax]
 80482de:	02 00                	add    al,BYTE PTR [eax]
 80482e0:	02 00                	add    al,BYTE PTR [eax]
 80482e2:	02 00                	add    al,BYTE PTR [eax]
 80482e4:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

080482e8 <.gnu.version_r>:
 80482e8:	01 00                	add    DWORD PTR [eax],eax
 80482ea:	01 00                	add    DWORD PTR [eax],eax
 80482ec:	01 00                	add    DWORD PTR [eax],eax
 80482ee:	00 00                	add    BYTE PTR [eax],al
 80482f0:	10 00                	adc    BYTE PTR [eax],al
 80482f2:	00 00                	add    BYTE PTR [eax],al
 80482f4:	00 00                	add    BYTE PTR [eax],al
 80482f6:	00 00                	add    BYTE PTR [eax],al
 80482f8:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 80482fb:	0d 00 00 02 00       	or     eax,0x20000
 8048300:	5b                   	pop    ebx
 8048301:	00 00                	add    BYTE PTR [eax],al
 8048303:	00 00                	add    BYTE PTR [eax],al
 8048305:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

08048308 <.rel.dyn>:
 8048308:	fc                   	cld    
 8048309:	9f                   	lahf   
 804830a:	04 08                	add    al,0x8
 804830c:	06                   	push   es
 804830d:	02 00                	add    al,BYTE PTR [eax]
	...

Disassembly of section .rel.plt:

08048310 <.rel.plt>:
 8048310:	0c a0                	or     al,0xa0
 8048312:	04 08                	add    al,0x8
 8048314:	07                   	pop    es
 8048315:	01 00                	add    DWORD PTR [eax],eax
 8048317:	00 10                	add    BYTE PTR [eax],dl
 8048319:	a0 04 08 07 02       	mov    al,ds:0x2070804
 804831e:	00 00                	add    BYTE PTR [eax],al
 8048320:	14 a0                	adc    al,0xa0
 8048322:	04 08                	add    al,0x8
 8048324:	07                   	pop    es
 8048325:	03 00                	add    eax,DWORD PTR [eax]
 8048327:	00 18                	add    BYTE PTR [eax],bl
 8048329:	a0 04 08 07 04       	mov    al,ds:0x4070804
 804832e:	00 00                	add    BYTE PTR [eax],al
 8048330:	1c a0                	sbb    al,0xa0
 8048332:	04 08                	add    al,0x8
 8048334:	07                   	pop    es
 8048335:	05 00 00 20 a0       	add    eax,0xa0200000
 804833a:	04 08                	add    al,0x8
 804833c:	07                   	pop    es
 804833d:	06                   	push   es
 804833e:	00 00                	add    BYTE PTR [eax],al
 8048340:	24 a0                	and    al,0xa0
 8048342:	04 08                	add    al,0x8
 8048344:	07                   	pop    es
 8048345:	07                   	pop    es
 8048346:	00 00                	add    BYTE PTR [eax],al
 8048348:	28 a0 04 08 07 08    	sub    BYTE PTR [eax+0x8070804],ah
	...

Disassembly of section .init:

08048350 <_init>:
 8048350:	53                   	push   ebx
 8048351:	83 ec 08             	sub    esp,0x8
 8048354:	e8 e7 00 00 00       	call   8048440 <__x86.get_pc_thunk.bx>
 8048359:	81 c3 a7 1c 00 00    	add    ebx,0x1ca7
 804835f:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048365:	85 c0                	test   eax,eax
 8048367:	74 05                	je     804836e <_init+0x1e>
 8048369:	e8 32 00 00 00       	call   80483a0 <__gmon_start__@plt>
 804836e:	83 c4 08             	add    esp,0x8
 8048371:	5b                   	pop    ebx
 8048372:	c3                   	ret    

Disassembly of section .plt:

08048380 <read@plt-0x10>:
 8048380:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048386:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804838c:	00 00                	add    BYTE PTR [eax],al
	...

08048390 <read@plt>:
 8048390:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048396:	68 00 00 00 00       	push   0x0
 804839b:	e9 e0 ff ff ff       	jmp    8048380 <_init+0x30>

080483a0 <__gmon_start__@plt>:
 80483a0:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 80483a6:	68 08 00 00 00       	push   0x8
 80483ab:	e9 d0 ff ff ff       	jmp    8048380 <_init+0x30>

080483b0 <exit@plt>:
 80483b0:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 80483b6:	68 10 00 00 00       	push   0x10
 80483bb:	e9 c0 ff ff ff       	jmp    8048380 <_init+0x30>

080483c0 <open@plt>:
 80483c0:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 80483c6:	68 18 00 00 00       	push   0x18
 80483cb:	e9 b0 ff ff ff       	jmp    8048380 <_init+0x30>

080483d0 <__libc_start_main@plt>:
 80483d0:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 80483d6:	68 20 00 00 00       	push   0x20
 80483db:	e9 a0 ff ff ff       	jmp    8048380 <_init+0x30>

080483e0 <write@plt>:
 80483e0:	ff 25 20 a0 04 08    	jmp    DWORD PTR ds:0x804a020
 80483e6:	68 28 00 00 00       	push   0x28
 80483eb:	e9 90 ff ff ff       	jmp    8048380 <_init+0x30>

080483f0 <atoi@plt>:
 80483f0:	ff 25 24 a0 04 08    	jmp    DWORD PTR ds:0x804a024
 80483f6:	68 30 00 00 00       	push   0x30
 80483fb:	e9 80 ff ff ff       	jmp    8048380 <_init+0x30>

08048400 <close@plt>:
 8048400:	ff 25 28 a0 04 08    	jmp    DWORD PTR ds:0x804a028
 8048406:	68 38 00 00 00       	push   0x38
 804840b:	e9 70 ff ff ff       	jmp    8048380 <_init+0x30>

Disassembly of section .text:

08048410 <_start>:
 8048410:	31 ed                	xor    ebp,ebp
 8048412:	5e                   	pop    esi
 8048413:	89 e1                	mov    ecx,esp
 8048415:	83 e4 f0             	and    esp,0xfffffff0
 8048418:	50                   	push   eax
 8048419:	54                   	push   esp
 804841a:	52                   	push   edx
 804841b:	68 f0 86 04 08       	push   0x80486f0
 8048420:	68 80 86 04 08       	push   0x8048680
 8048425:	51                   	push   ecx
 8048426:	56                   	push   esi
 8048427:	68 5c 85 04 08       	push   0x804855c
 804842c:	e8 9f ff ff ff       	call   80483d0 <__libc_start_main@plt>
 8048431:	f4                   	hlt    
 8048432:	66 90                	xchg   ax,ax
 8048434:	66 90                	xchg   ax,ax
 8048436:	66 90                	xchg   ax,ax
 8048438:	66 90                	xchg   ax,ax
 804843a:	66 90                	xchg   ax,ax
 804843c:	66 90                	xchg   ax,ax
 804843e:	66 90                	xchg   ax,ax

08048440 <__x86.get_pc_thunk.bx>:
 8048440:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048443:	c3                   	ret    
 8048444:	66 90                	xchg   ax,ax
 8048446:	66 90                	xchg   ax,ax
 8048448:	66 90                	xchg   ax,ax
 804844a:	66 90                	xchg   ax,ax
 804844c:	66 90                	xchg   ax,ax
 804844e:	66 90                	xchg   ax,ax

08048450 <deregister_tm_clones>:
 8048450:	b8 37 a0 04 08       	mov    eax,0x804a037
 8048455:	2d 34 a0 04 08       	sub    eax,0x804a034
 804845a:	83 f8 06             	cmp    eax,0x6
 804845d:	77 01                	ja     8048460 <deregister_tm_clones+0x10>
 804845f:	c3                   	ret    
 8048460:	b8 00 00 00 00       	mov    eax,0x0
 8048465:	85 c0                	test   eax,eax
 8048467:	74 f6                	je     804845f <deregister_tm_clones+0xf>
 8048469:	55                   	push   ebp
 804846a:	89 e5                	mov    ebp,esp
 804846c:	83 ec 18             	sub    esp,0x18
 804846f:	c7 04 24 34 a0 04 08 	mov    DWORD PTR [esp],0x804a034
 8048476:	ff d0                	call   eax
 8048478:	c9                   	leave  
 8048479:	c3                   	ret    
 804847a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048480 <register_tm_clones>:
 8048480:	b8 34 a0 04 08       	mov    eax,0x804a034
 8048485:	2d 34 a0 04 08       	sub    eax,0x804a034
 804848a:	c1 f8 02             	sar    eax,0x2
 804848d:	89 c2                	mov    edx,eax
 804848f:	c1 ea 1f             	shr    edx,0x1f
 8048492:	01 d0                	add    eax,edx
 8048494:	d1 f8                	sar    eax,1
 8048496:	75 01                	jne    8048499 <register_tm_clones+0x19>
 8048498:	c3                   	ret    
 8048499:	ba 00 00 00 00       	mov    edx,0x0
 804849e:	85 d2                	test   edx,edx
 80484a0:	74 f6                	je     8048498 <register_tm_clones+0x18>
 80484a2:	55                   	push   ebp
 80484a3:	89 e5                	mov    ebp,esp
 80484a5:	83 ec 18             	sub    esp,0x18
 80484a8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80484ac:	c7 04 24 34 a0 04 08 	mov    DWORD PTR [esp],0x804a034
 80484b3:	ff d2                	call   edx
 80484b5:	c9                   	leave  
 80484b6:	c3                   	ret    
 80484b7:	89 f6                	mov    esi,esi
 80484b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080484c0 <__do_global_dtors_aux>:
 80484c0:	80 3d 34 a0 04 08 00 	cmp    BYTE PTR ds:0x804a034,0x0
 80484c7:	75 13                	jne    80484dc <__do_global_dtors_aux+0x1c>
 80484c9:	55                   	push   ebp
 80484ca:	89 e5                	mov    ebp,esp
 80484cc:	83 ec 08             	sub    esp,0x8
 80484cf:	e8 7c ff ff ff       	call   8048450 <deregister_tm_clones>
 80484d4:	c6 05 34 a0 04 08 01 	mov    BYTE PTR ds:0x804a034,0x1
 80484db:	c9                   	leave  
 80484dc:	f3 c3                	repz ret 
 80484de:	66 90                	xchg   ax,ax

080484e0 <frame_dummy>:
 80484e0:	a1 10 9f 04 08       	mov    eax,ds:0x8049f10
 80484e5:	85 c0                	test   eax,eax
 80484e7:	74 1f                	je     8048508 <frame_dummy+0x28>
 80484e9:	b8 00 00 00 00       	mov    eax,0x0
 80484ee:	85 c0                	test   eax,eax
 80484f0:	74 16                	je     8048508 <frame_dummy+0x28>
 80484f2:	55                   	push   ebp
 80484f3:	89 e5                	mov    ebp,esp
 80484f5:	83 ec 18             	sub    esp,0x18
 80484f8:	c7 04 24 10 9f 04 08 	mov    DWORD PTR [esp],0x8049f10
 80484ff:	ff d0                	call   eax
 8048501:	c9                   	leave  
 8048502:	e9 79 ff ff ff       	jmp    8048480 <register_tm_clones>
 8048507:	90                   	nop
 8048508:	e9 73 ff ff ff       	jmp    8048480 <register_tm_clones>

0804850d <read_80_bytes>:
 804850d:	55                   	push   ebp
 804850e:	89 e5                	mov    ebp,esp
 8048510:	83 ec 28             	sub    esp,0x28
 8048513:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
 804851a:	eb 35                	jmp    8048551 <read_80_bytes+0x44>
 804851c:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
 804851f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048522:	01 d0                	add    eax,edx
 8048524:	c7 44 24 08 01 00 00 	mov    DWORD PTR [esp+0x8],0x1
 804852b:	00 
 804852c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048530:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 8048537:	e8 54 fe ff ff       	call   8048390 <read@plt>
 804853c:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
 804853f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048542:	01 d0                	add    eax,edx
 8048544:	0f b6 00             	movzx  eax,BYTE PTR [eax]
 8048547:	3c 0a                	cmp    al,0xa
 8048549:	75 02                	jne    804854d <read_80_bytes+0x40>
 804854b:	eb 0d                	jmp    804855a <read_80_bytes+0x4d>
 804854d:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
 8048551:	81 7d f4 1f 03 00 00 	cmp    DWORD PTR [ebp-0xc],0x31f
 8048558:	7e c2                	jle    804851c <read_80_bytes+0xf>
 804855a:	c9                   	leave  
 804855b:	c3                   	ret    

0804855c <main>:
 804855c:	55                   	push   ebp
 804855d:	89 e5                	mov    ebp,esp
 804855f:	83 e4 f0             	and    esp,0xfffffff0
 8048562:	83 ec 70             	sub    esp,0x70
 8048565:	8d 44 24 14          	lea    eax,[esp+0x14]
 8048569:	89 04 24             	mov    DWORD PTR [esp],eax
 804856c:	e8 9c ff ff ff       	call   804850d <read_80_bytes>
 8048571:	8d 44 24 14          	lea    eax,[esp+0x14]
 8048575:	89 04 24             	mov    DWORD PTR [esp],eax
 8048578:	e8 73 fe ff ff       	call   80483f0 <atoi@plt>
 804857d:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
 8048581:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
 8048585:	83 f8 28             	cmp    eax,0x28
 8048588:	76 0c                	jbe    8048596 <main+0x3a>
 804858a:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 8048591:	e8 1a fe ff ff       	call   80483b0 <exit@plt>
 8048596:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 804859d:	00 
 804859e:	c7 04 24 10 87 04 08 	mov    DWORD PTR [esp],0x8048710
 80485a5:	e8 16 fe ff ff       	call   80483c0 <open@plt>
 80485aa:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
 80485ae:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
 80485b2:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80485b6:	8d 44 24 14          	lea    eax,[esp+0x14]
 80485ba:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80485be:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
 80485c2:	89 04 24             	mov    DWORD PTR [esp],eax
 80485c5:	e8 c6 fd ff ff       	call   8048390 <read@plt>
 80485ca:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
 80485ce:	89 04 24             	mov    DWORD PTR [esp],eax
 80485d1:	e8 2a fe ff ff       	call   8048400 <close@plt>
 80485d6:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 80485dd:	00 
 80485de:	c7 04 24 22 87 04 08 	mov    DWORD PTR [esp],0x8048722
 80485e5:	e8 d6 fd ff ff       	call   80483c0 <open@plt>
 80485ea:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
 80485ee:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
 80485f2:	8b 54 24 68          	mov    edx,DWORD PTR [esp+0x68]
 80485f6:	8d 4c 24 14          	lea    ecx,[esp+0x14]
 80485fa:	01 ca                	add    edx,ecx
 80485fc:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048600:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 8048604:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
 8048608:	89 04 24             	mov    DWORD PTR [esp],eax
 804860b:	e8 80 fd ff ff       	call   8048390 <read@plt>
 8048610:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
 8048614:	89 04 24             	mov    DWORD PTR [esp],eax
 8048617:	e8 e4 fd ff ff       	call   8048400 <close@plt>
 804861c:	c7 44 24 6c 00 00 00 	mov    DWORD PTR [esp+0x6c],0x0
 8048623:	00 
 8048624:	eb 2f                	jmp    8048655 <main+0xf9>
 8048626:	8d 54 24 14          	lea    edx,[esp+0x14]
 804862a:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
 804862e:	01 d0                	add    eax,edx
 8048630:	0f b6 10             	movzx  edx,BYTE PTR [eax]
 8048633:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
 8048637:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
 804863b:	01 c8                	add    eax,ecx
 804863d:	0f b6 44 04 14       	movzx  eax,BYTE PTR [esp+eax*1+0x14]
 8048642:	31 d0                	xor    eax,edx
 8048644:	8d 4c 24 14          	lea    ecx,[esp+0x14]
 8048648:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
 804864c:	01 ca                	add    edx,ecx
 804864e:	88 02                	mov    BYTE PTR [edx],al
 8048650:	83 44 24 6c 01       	add    DWORD PTR [esp+0x6c],0x1
 8048655:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
 8048659:	3b 44 24 68          	cmp    eax,DWORD PTR [esp+0x68]
 804865d:	7c c7                	jl     8048626 <main+0xca>
 804865f:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
 8048663:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048667:	8d 44 24 14          	lea    eax,[esp+0x14]
 804866b:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804866f:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
 8048676:	e8 65 fd ff ff       	call   80483e0 <write@plt>
 804867b:	c9                   	leave  
 804867c:	c3                   	ret    
 804867d:	66 90                	xchg   ax,ax
 804867f:	90                   	nop

08048680 <__libc_csu_init>:
 8048680:	55                   	push   ebp
 8048681:	57                   	push   edi
 8048682:	31 ff                	xor    edi,edi
 8048684:	56                   	push   esi
 8048685:	53                   	push   ebx
 8048686:	e8 b5 fd ff ff       	call   8048440 <__x86.get_pc_thunk.bx>
 804868b:	81 c3 75 19 00 00    	add    ebx,0x1975
 8048691:	83 ec 1c             	sub    esp,0x1c
 8048694:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 8048698:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804869e:	e8 ad fc ff ff       	call   8048350 <_init>
 80486a3:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 80486a9:	29 c6                	sub    esi,eax
 80486ab:	c1 fe 02             	sar    esi,0x2
 80486ae:	85 f6                	test   esi,esi
 80486b0:	74 27                	je     80486d9 <__libc_csu_init+0x59>
 80486b2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80486b8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 80486bc:	89 2c 24             	mov    DWORD PTR [esp],ebp
 80486bf:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80486c3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 80486c7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80486cb:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 80486d2:	83 c7 01             	add    edi,0x1
 80486d5:	39 f7                	cmp    edi,esi
 80486d7:	75 df                	jne    80486b8 <__libc_csu_init+0x38>
 80486d9:	83 c4 1c             	add    esp,0x1c
 80486dc:	5b                   	pop    ebx
 80486dd:	5e                   	pop    esi
 80486de:	5f                   	pop    edi
 80486df:	5d                   	pop    ebp
 80486e0:	c3                   	ret    
 80486e1:	eb 0d                	jmp    80486f0 <__libc_csu_fini>
 80486e3:	90                   	nop
 80486e4:	90                   	nop
 80486e5:	90                   	nop
 80486e6:	90                   	nop
 80486e7:	90                   	nop
 80486e8:	90                   	nop
 80486e9:	90                   	nop
 80486ea:	90                   	nop
 80486eb:	90                   	nop
 80486ec:	90                   	nop
 80486ed:	90                   	nop
 80486ee:	90                   	nop
 80486ef:	90                   	nop

080486f0 <__libc_csu_fini>:
 80486f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080486f4 <_fini>:
 80486f4:	53                   	push   ebx
 80486f5:	83 ec 08             	sub    esp,0x8
 80486f8:	e8 43 fd ff ff       	call   8048440 <__x86.get_pc_thunk.bx>
 80486fd:	81 c3 03 19 00 00    	add    ebx,0x1903
 8048703:	83 c4 08             	add    esp,0x8
 8048706:	5b                   	pop    ebx
 8048707:	c3                   	ret    

Disassembly of section .rodata:

08048708 <_fp_hw>:
 8048708:	03 00                	add    eax,DWORD PTR [eax]
	...

0804870c <_IO_stdin_used>:
 804870c:	01 00                	add    DWORD PTR [eax],eax
 804870e:	02 00                	add    al,BYTE PTR [eax]
 8048710:	2f                   	das    
 8048711:	68 6f 6d 65 2f       	push   0x2f656d6f
 8048716:	78 6f                	js     8048787 <_IO_stdin_used+0x7b>
 8048718:	72 66                	jb     8048780 <_IO_stdin_used+0x74>
 804871a:	6c                   	ins    BYTE PTR es:[edi],dx
 804871b:	61                   	popa   
 804871c:	67 2f                	addr16 das 
 804871e:	6b 65 79 00          	imul   esp,DWORD PTR [ebp+0x79],0x0
 8048722:	2f                   	das    
 8048723:	68 6f 6d 65 2f       	push   0x2f656d6f
 8048728:	78 6f                	js     8048799 <_IO_stdin_used+0x8d>
 804872a:	72 66                	jb     8048792 <_IO_stdin_used+0x86>
 804872c:	6c                   	ins    BYTE PTR es:[edi],dx
 804872d:	61                   	popa   
 804872e:	67 2f                	addr16 das 
 8048730:	66                   	data16
 8048731:	6c                   	ins    BYTE PTR es:[edi],dx
 8048732:	61                   	popa   
 8048733:	67                   	addr16
	...

Disassembly of section .eh_frame_hdr:

08048738 <.eh_frame_hdr>:
 8048738:	01 1b                	add    DWORD PTR [ebx],ebx
 804873a:	03 3b                	add    edi,DWORD PTR [ebx]
 804873c:	30 00                	xor    BYTE PTR [eax],al
 804873e:	00 00                	add    BYTE PTR [eax],al
 8048740:	05 00 00 00 48       	add    eax,0x48000000
 8048745:	fc                   	cld    
 8048746:	ff                   	(bad)  
 8048747:	ff 4c 00 00          	dec    DWORD PTR [eax+eax*1+0x0]
 804874b:	00 d5                	add    ch,dl
 804874d:	fd                   	std    
 804874e:	ff                   	(bad)  
 804874f:	ff 70 00             	push   DWORD PTR [eax+0x0]
 8048752:	00 00                	add    BYTE PTR [eax],al
 8048754:	24 fe                	and    al,0xfe
 8048756:	ff                   	(bad)  
 8048757:	ff 90 00 00 00 48    	call   DWORD PTR [eax+0x48000000]
 804875d:	ff                   	(bad)  
 804875e:	ff                   	(bad)  
 804875f:	ff b0 00 00 00 b8    	push   DWORD PTR [eax-0x48000000]
 8048765:	ff                   	(bad)  
 8048766:	ff                   	(bad)  
 8048767:	ff                   	(bad)  
 8048768:	ec                   	in     al,dx
 8048769:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

0804876c <__FRAME_END__-0xcc>:
 804876c:	14 00                	adc    al,0x0
 804876e:	00 00                	add    BYTE PTR [eax],al
 8048770:	00 00                	add    BYTE PTR [eax],al
 8048772:	00 00                	add    BYTE PTR [eax],al
 8048774:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 8048777:	00 01                	add    BYTE PTR [ecx],al
 8048779:	7c 08                	jl     8048783 <_IO_stdin_used+0x77>
 804877b:	01 1b                	add    DWORD PTR [ebx],ebx
 804877d:	0c 04                	or     al,0x4
 804877f:	04 88                	add    al,0x88
 8048781:	01 00                	add    DWORD PTR [eax],eax
 8048783:	00 20                	add    BYTE PTR [eax],ah
 8048785:	00 00                	add    BYTE PTR [eax],al
 8048787:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804878a:	00 00                	add    BYTE PTR [eax],al
 804878c:	f4                   	hlt    
 804878d:	fb                   	sti    
 804878e:	ff                   	(bad)  
 804878f:	ff 90 00 00 00 00    	call   DWORD PTR [eax+0x0]
 8048795:	0e                   	push   cs
 8048796:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 8048799:	0c 4a                	or     al,0x4a
 804879b:	0f 0b                	ud2    
 804879d:	74 04                	je     80487a3 <_IO_stdin_used+0x97>
 804879f:	78 00                	js     80487a1 <_IO_stdin_used+0x95>
 80487a1:	3f                   	aas    
 80487a2:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 80487a4:	2a 32                	sub    dh,BYTE PTR [edx]
 80487a6:	24 22                	and    al,0x22
 80487a8:	1c 00                	sbb    al,0x0
 80487aa:	00 00                	add    BYTE PTR [eax],al
 80487ac:	40                   	inc    eax
 80487ad:	00 00                	add    BYTE PTR [eax],al
 80487af:	00 5d fd             	add    BYTE PTR [ebp-0x3],bl
 80487b2:	ff                   	(bad)  
 80487b3:	ff 4f 00             	dec    DWORD PTR [edi+0x0]
 80487b6:	00 00                	add    BYTE PTR [eax],al
 80487b8:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80487bb:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80487c1:	02 4b c5             	add    cl,BYTE PTR [ebx-0x3b]
 80487c4:	0c 04                	or     al,0x4
 80487c6:	04 00                	add    al,0x0
 80487c8:	1c 00                	sbb    al,0x0
 80487ca:	00 00                	add    BYTE PTR [eax],al
 80487cc:	60                   	pusha  
 80487cd:	00 00                	add    BYTE PTR [eax],al
 80487cf:	00 8c fd ff ff 21 01 	add    BYTE PTR [ebp+edi*8+0x121ffff],cl
 80487d6:	00 00                	add    BYTE PTR [eax],al
 80487d8:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80487db:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80487e1:	03 1d 01 c5 0c 04    	add    ebx,DWORD PTR ds:0x40cc501
 80487e7:	04 38                	add    al,0x38
 80487e9:	00 00                	add    BYTE PTR [eax],al
 80487eb:	00 80 00 00 00 90    	add    BYTE PTR [eax-0x70000000],al
 80487f1:	fe                   	(bad)  
 80487f2:	ff                   	(bad)  
 80487f3:	ff 61 00             	jmp    DWORD PTR [ecx+0x0]
 80487f6:	00 00                	add    BYTE PTR [eax],al
 80487f8:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80487fb:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 8048801:	87 03                	xchg   DWORD PTR [ebx],eax
 8048803:	43                   	inc    ebx
 8048804:	0e                   	push   cs
 8048805:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 804880b:	83 05 4e 0e 30 02 48 	add    DWORD PTR ds:0x2300e4e,0x48
 8048812:	0e                   	push   cs
 8048813:	14 41                	adc    al,0x41
 8048815:	c3                   	ret    
 8048816:	0e                   	push   cs
 8048817:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 804881a:	0e                   	push   cs
 804881b:	0c 41                	or     al,0x41
 804881d:	c7                   	(bad)  
 804881e:	0e                   	push   cs
 804881f:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 8048822:	0e                   	push   cs
 8048823:	04 10                	add    al,0x10
 8048825:	00 00                	add    BYTE PTR [eax],al
 8048827:	00 bc 00 00 00 c4 fe 	add    BYTE PTR [eax+eax*1-0x13c0000],bh
 804882e:	ff                   	(bad)  
 804882f:	ff 02                	inc    DWORD PTR [edx]
 8048831:	00 00                	add    BYTE PTR [eax],al
 8048833:	00 00                	add    BYTE PTR [eax],al
 8048835:	00 00                	add    BYTE PTR [eax],al
	...

08048838 <__FRAME_END__>:
 8048838:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	e0 84                	loopne 8049e8e <__FRAME_END__+0x1656>
 8049f0a:	04 08                	add    al,0x8

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	c0                   	.byte 0xc0
 8049f0d:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    DWORD PTR [eax],eax
 8049f16:	00 00                	add    BYTE PTR [eax],al
 8049f18:	01 00                	add    DWORD PTR [eax],eax
 8049f1a:	00 00                	add    BYTE PTR [eax],al
 8049f1c:	0c 00                	or     al,0x0
 8049f1e:	00 00                	add    BYTE PTR [eax],al
 8049f20:	50                   	push   eax
 8049f21:	83 04 08 0d          	add    DWORD PTR [eax+ecx*1],0xd
 8049f25:	00 00                	add    BYTE PTR [eax],al
 8049f27:	00 f4                	add    ah,dh
 8049f29:	86 04 08             	xchg   BYTE PTR [eax+ecx*1],al
 8049f2c:	19 00                	sbb    DWORD PTR [eax],eax
 8049f2e:	00 00                	add    BYTE PTR [eax],al
 8049f30:	08 9f 04 08 1b 00    	or     BYTE PTR [edi+0x1b0804],bl
 8049f36:	00 00                	add    BYTE PTR [eax],al
 8049f38:	04 00                	add    al,0x0
 8049f3a:	00 00                	add    BYTE PTR [eax],al
 8049f3c:	1a 00                	sbb    al,BYTE PTR [eax]
 8049f3e:	00 00                	add    BYTE PTR [eax],al
 8049f40:	0c 9f                	or     al,0x9f
 8049f42:	04 08                	add    al,0x8
 8049f44:	1c 00                	sbb    al,0x0
 8049f46:	00 00                	add    BYTE PTR [eax],al
 8049f48:	04 00                	add    al,0x0
 8049f4a:	00 00                	add    BYTE PTR [eax],al
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
 8049f51:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049f58:	6c                   	ins    BYTE PTR es:[edi],dx
 8049f59:	82                   	(bad)  
 8049f5a:	04 08                	add    al,0x8
 8049f5c:	06                   	push   es
 8049f5d:	00 00                	add    BYTE PTR [eax],al
 8049f5f:	00 cc                	add    ah,cl
 8049f61:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 8049f68:	65 00 00             	add    BYTE PTR gs:[eax],al
 8049f6b:	00 0b                	add    BYTE PTR [ebx],cl
 8049f6d:	00 00                	add    BYTE PTR [eax],al
 8049f6f:	00 10                	add    BYTE PTR [eax],dl
 8049f71:	00 00                	add    BYTE PTR [eax],al
 8049f73:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049f79:	00 00                	add    BYTE PTR [eax],al
 8049f7b:	00 03                	add    BYTE PTR [ebx],al
 8049f7d:	00 00                	add    BYTE PTR [eax],al
 8049f7f:	00 00                	add    BYTE PTR [eax],al
 8049f81:	a0 04 08 02 00       	mov    al,ds:0x20804
 8049f86:	00 00                	add    BYTE PTR [eax],al
 8049f88:	40                   	inc    eax
 8049f89:	00 00                	add    BYTE PTR [eax],al
 8049f8b:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
 8049f8e:	00 00                	add    BYTE PTR [eax],al
 8049f90:	11 00                	adc    DWORD PTR [eax],eax
 8049f92:	00 00                	add    BYTE PTR [eax],al
 8049f94:	17                   	pop    ss
 8049f95:	00 00                	add    BYTE PTR [eax],al
 8049f97:	00 10                	add    BYTE PTR [eax],dl
 8049f99:	83 04 08 11          	add    DWORD PTR [eax+ecx*1],0x11
 8049f9d:	00 00                	add    BYTE PTR [eax],al
 8049f9f:	00 08                	add    BYTE PTR [eax],cl
 8049fa1:	83 04 08 12          	add    DWORD PTR [eax+ecx*1],0x12
 8049fa5:	00 00                	add    BYTE PTR [eax],al
 8049fa7:	00 08                	add    BYTE PTR [eax],cl
 8049fa9:	00 00                	add    BYTE PTR [eax],al
 8049fab:	00 13                	add    BYTE PTR [ebx],dl
 8049fad:	00 00                	add    BYTE PTR [eax],al
 8049faf:	00 08                	add    BYTE PTR [eax],cl
 8049fb1:	00 00                	add    BYTE PTR [eax],al
 8049fb3:	00 fe                	add    dh,bh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f e8             	jmp    FWORD PTR [edi-0x18]
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    al,0x8
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 8049fc1:	00 00                	add    BYTE PTR [eax],al
 8049fc3:	00 f0                	add    al,dh
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f d2             	jmp    FWORD PTR [edi-0x2e]
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    al,0x8
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    al,0x9f
 804a002:	04 08                	add    al,0x8
	...
 804a00c:	96                   	xchg   esi,eax
 804a00d:	83 04 08 a6          	add    DWORD PTR [eax+ecx*1],0xffffffa6
 804a011:	83 04 08 b6          	add    DWORD PTR [eax+ecx*1],0xffffffb6
 804a015:	83 04 08 c6          	add    DWORD PTR [eax+ecx*1],0xffffffc6
 804a019:	83 04 08 d6          	add    DWORD PTR [eax+ecx*1],0xffffffd6
 804a01d:	83 04 08 e6          	add    DWORD PTR [eax+ecx*1],0xffffffe6
 804a021:	83 04 08 f6          	add    DWORD PTR [eax+ecx*1],0xfffffff6
 804a025:	83 04 08 06          	add    DWORD PTR [eax+ecx*1],0x6
 804a029:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .data:

0804a02c <__data_start>:
 804a02c:	00 00                	add    BYTE PTR [eax],al
	...

0804a030 <__dso_handle>:
 804a030:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0804a034 <__bss_start>:
 804a034:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x80482d8>
   a:	74 75                	je     81 <_init-0x80482cf>
   c:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
   f:	38 2e                	cmp    BYTE PTR [esi],ch
  11:	34 2d                	xor    al,0x2d
  13:	32 75 62             	xor    dh,BYTE PTR [ebp+0x62]
  16:	75 6e                	jne    86 <_init-0x80482ca>
  18:	74 75                	je     8f <_init-0x80482c1>
  1a:	31 7e 31             	xor    DWORD PTR [esi+0x31],edi
  1d:	34 2e                	xor    al,0x2e
  1f:	30 34 29             	xor    BYTE PTR [ecx+ebp*1],dh
  22:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  25:	38 2e                	cmp    BYTE PTR [esi],ch
  27:	34 00                	xor    al,0x0
  29:	47                   	inc    edi
  2a:	43                   	inc    ebx
  2b:	43                   	inc    ebx
  2c:	3a 20                	cmp    ah,BYTE PTR [eax]
  2e:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  31:	75 6e                	jne    a1 <_init-0x80482af>
  33:	74 75                	je     aa <_init-0x80482a6>
  35:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  38:	38 2e                	cmp    BYTE PTR [esi],ch
  3a:	32 2d 31 39 75 62    	xor    ch,BYTE PTR ds:0x62753931
  40:	75 6e                	jne    b0 <_init-0x80482a0>
  42:	74 75                	je     b9 <_init-0x8048297>
  44:	31 29                	xor    DWORD PTR [ecx],ebp
  46:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  49:	38 2e                	cmp    BYTE PTR [esi],ch
  4b:	32 00                	xor    al,BYTE PTR [eax]
