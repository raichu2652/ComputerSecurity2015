
vul:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	ins    BYTE PTR es:[edi],dx
 8048156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804815d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	10 00                	adc    BYTE PTR [eax],al
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	01 00                	add    DWORD PTR [eax],eax
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 00                	add    BYTE PTR [eax],al
 8048179:	00 00                	add    BYTE PTR [eax],al
 804817b:	00 02                	add    BYTE PTR [edx],al
 804817d:	00 00                	add    BYTE PTR [eax],al
 804817f:	00 06                	add    BYTE PTR [esi],al
 8048181:	00 00                	add    BYTE PTR [eax],al
 8048183:	00 18                	add    BYTE PTR [eax],bl
 8048185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    al,0x0
 804818a:	00 00                	add    BYTE PTR [eax],al
 804818c:	14 00                	adc    al,0x0
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	47                   	inc    edi
 8048195:	4e                   	dec    esi
 8048196:	55                   	push   ebp
 8048197:	00 c7                	add    bh,al
 8048199:	e5 91                	in     eax,0x91
 804819b:	e5 c2                	in     eax,0xc2
 804819d:	5c                   	pop    esp
 804819e:	12 dc                	adc    bl,ah
 80481a0:	06                   	push   es
 80481a1:	87 24 9f             	xchg   DWORD PTR [edi+ebx*4],esp
 80481a4:	4e                   	dec    esi
 80481a5:	86 a6 df 8f d1 5a    	xchg   BYTE PTR [esi+0x5ad18fdf],ah
 80481ab:	de                   	.byte 0xde

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	03 00                	add    eax,DWORD PTR [eax]
 80481ae:	00 00                	add    BYTE PTR [eax],al
 80481b0:	07                   	pop    es
 80481b1:	00 00                	add    BYTE PTR [eax],al
 80481b3:	00 01                	add    BYTE PTR [ecx],al
 80481b5:	00 00                	add    BYTE PTR [eax],al
 80481b7:	00 05 00 00 00 80    	add    BYTE PTR ds:0x80000000,al
 80481bd:	2b 00                	sub    eax,DWORD PTR [eax]
 80481bf:	20 07                	and    BYTE PTR [edi],al
 80481c1:	00 00                	add    BYTE PTR [eax],al
 80481c3:	00 08                	add    BYTE PTR [eax],cl
 80481c5:	00 00                	add    BYTE PTR [eax],al
 80481c7:	00 00                	add    BYTE PTR [eax],al
 80481c9:	00 00                	add    BYTE PTR [eax],al
 80481cb:	00 29                	add    BYTE PTR [ecx],ch
 80481cd:	1d 8c 1c ac 4b       	sbb    eax,0x4bac1c8c
 80481d2:	e3 c0                	jecxz  8048194 <_init-0x1cc>
 80481d4:	67 55                	addr16 push ebp
 80481d6:	61                   	popa   
 80481d7:	10                   	.byte 0x10

Disassembly of section .dynsym:

080481d8 <.dynsym>:
	...
 80481e8:	25 00 00 00 00       	and    eax,0x0
 80481ed:	00 00                	add    BYTE PTR [eax],al
 80481ef:	00 00                	add    BYTE PTR [eax],al
 80481f1:	00 00                	add    BYTE PTR [eax],al
 80481f3:	00 12                	add    BYTE PTR [edx],dl
 80481f5:	00 00                	add    BYTE PTR [eax],al
 80481f7:	00 2c 00             	add    BYTE PTR [eax+eax*1],ch
	...
 8048202:	00 00                	add    BYTE PTR [eax],al
 8048204:	12 00                	adc    al,BYTE PTR [eax]
 8048206:	00 00                	add    BYTE PTR [eax],al
 8048208:	53                   	push   ebx
	...
 8048211:	00 00                	add    BYTE PTR [eax],al
 8048213:	00 20                	add    BYTE PTR [eax],ah
 8048215:	00 00                	add    BYTE PTR [eax],al
 8048217:	00 1a                	add    BYTE PTR [edx],bl
	...
 8048221:	00 00                	add    BYTE PTR [eax],al
 8048223:	00 12                	add    BYTE PTR [edx],dl
 8048225:	00 00                	add    BYTE PTR [eax],al
 8048227:	00 41 00             	add    BYTE PTR [ecx+0x0],al
	...
 8048232:	00 00                	add    BYTE PTR [eax],al
 8048234:	12 00                	adc    al,BYTE PTR [eax]
 8048236:	00 00                	add    BYTE PTR [eax],al
 8048238:	39 00                	cmp    DWORD PTR [eax],eax
	...
 8048242:	00 00                	add    BYTE PTR [eax],al
 8048244:	12 00                	adc    al,BYTE PTR [eax]
 8048246:	00 00                	add    BYTE PTR [eax],al
 8048248:	32 00                	xor    al,BYTE PTR [eax]
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	60                   	pusha  
 804824d:	a0 04 08 04 00       	mov    al,ds:0x40804
 8048252:	00 00                	add    BYTE PTR [eax],al
 8048254:	11 00                	adc    DWORD PTR [eax],eax
 8048256:	19 00                	sbb    DWORD PTR [eax],eax
 8048258:	0b 00                	or     eax,DWORD PTR [eax]
 804825a:	00 00                	add    BYTE PTR [eax],al
 804825c:	0c 86                	or     al,0x86
 804825e:	04 08                	add    al,0x8
 8048260:	04 00                	add    al,0x0
 8048262:	00 00                	add    BYTE PTR [eax],al
 8048264:	11 00                	adc    DWORD PTR [eax],eax
 8048266:	0f 00 1f             	ltr    WORD PTR [edi]
 8048269:	00 00                	add    BYTE PTR [eax],al
 804826b:	00 40 a0             	add    BYTE PTR [eax-0x60],al
 804826e:	04 08                	add    al,0x8
 8048270:	04 00                	add    al,0x0
 8048272:	00 00                	add    BYTE PTR [eax],al
 8048274:	11 00                	adc    DWORD PTR [eax],eax
 8048276:	19 00                	sbb    DWORD PTR [eax],eax

Disassembly of section .dynstr:

08048278 <.dynstr>:
 8048278:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 804827c:	63 2e                	arpl   WORD PTR [esi],bp
 804827e:	73 6f                	jae    80482ef <_init-0x71>
 8048280:	2e 36 00 5f 49       	cs add BYTE PTR cs:ss:[edi+0x49],bl
 8048285:	4f                   	dec    edi
 8048286:	5f                   	pop    edi
 8048287:	73 74                	jae    80482fd <_init-0x63>
 8048289:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048290:	64 
 8048291:	00 65 78             	add    BYTE PTR [ebp+0x78],ah
 8048294:	69 74 00 73 74 64 69 	imul   esi,DWORD PTR [eax+eax*1+0x73],0x6e696474
 804829b:	6e 
 804829c:	00 70 72             	add    BYTE PTR [eax+0x72],dh
 804829f:	69 6e 74 66 00 66 67 	imul   ebp,DWORD PTR [esi+0x74],0x67660066
 80482a6:	65                   	gs
 80482a7:	74 73                	je     804831c <_init-0x44>
 80482a9:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 80482ac:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 80482ae:	75 74                	jne    8048324 <_init-0x3c>
 80482b0:	00 73 65             	add    BYTE PTR [ebx+0x65],dh
 80482b3:	74 76                	je     804832b <_init-0x35>
 80482b5:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 80482b8:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 80482bb:	6c                   	ins    BYTE PTR es:[edi],dx
 80482bc:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 80482c3:	72 74                	jb     8048339 <_init-0x27>
 80482c5:	5f                   	pop    edi
 80482c6:	6d                   	ins    DWORD PTR es:[edi],dx
 80482c7:	61                   	popa   
 80482c8:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [esi+0x0],0x6d675f5f
 80482cf:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80482d0:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482d1:	5f                   	pop    edi
 80482d2:	73 74                	jae    8048348 <_init-0x18>
 80482d4:	61                   	popa   
 80482d5:	72 74                	jb     804834b <_init-0x15>
 80482d7:	5f                   	pop    edi
 80482d8:	5f                   	pop    edi
 80482d9:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 80482dc:	49                   	dec    ecx
 80482dd:	42                   	inc    edx
 80482de:	43                   	inc    ebx
 80482df:	5f                   	pop    edi
 80482e0:	32 2e                	xor    ch,BYTE PTR [esi]
 80482e2:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

080482e4 <.gnu.version>:
 80482e4:	00 00                	add    BYTE PTR [eax],al
 80482e6:	02 00                	add    al,BYTE PTR [eax]
 80482e8:	02 00                	add    al,BYTE PTR [eax]
 80482ea:	00 00                	add    BYTE PTR [eax],al
 80482ec:	02 00                	add    al,BYTE PTR [eax]
 80482ee:	02 00                	add    al,BYTE PTR [eax]
 80482f0:	02 00                	add    al,BYTE PTR [eax]
 80482f2:	02 00                	add    al,BYTE PTR [eax]
 80482f4:	01 00                	add    DWORD PTR [eax],eax
 80482f6:	02 00                	add    al,BYTE PTR [eax]

Disassembly of section .gnu.version_r:

080482f8 <.gnu.version_r>:
 80482f8:	01 00                	add    DWORD PTR [eax],eax
 80482fa:	01 00                	add    DWORD PTR [eax],eax
 80482fc:	01 00                	add    DWORD PTR [eax],eax
 80482fe:	00 00                	add    BYTE PTR [eax],al
 8048300:	10 00                	adc    BYTE PTR [eax],al
 8048302:	00 00                	add    BYTE PTR [eax],al
 8048304:	00 00                	add    BYTE PTR [eax],al
 8048306:	00 00                	add    BYTE PTR [eax],al
 8048308:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 804830b:	0d 00 00 02 00       	or     eax,0x20000
 8048310:	62 00                	bound  eax,QWORD PTR [eax]
 8048312:	00 00                	add    BYTE PTR [eax],al
 8048314:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

08048318 <.rel.dyn>:
 8048318:	fc                   	cld    
 8048319:	9f                   	lahf   
 804831a:	04 08                	add    al,0x8
 804831c:	06                   	push   es
 804831d:	03 00                	add    eax,DWORD PTR [eax]
 804831f:	00 40 a0             	add    BYTE PTR [eax-0x60],al
 8048322:	04 08                	add    al,0x8
 8048324:	05 09 00 00 60       	add    eax,0x60000009
 8048329:	a0 04 08 05 07       	mov    al,ds:0x7050804
	...

Disassembly of section .rel.plt:

08048330 <.rel.plt>:
 8048330:	0c a0                	or     al,0xa0
 8048332:	04 08                	add    al,0x8
 8048334:	07                   	pop    es
 8048335:	01 00                	add    DWORD PTR [eax],eax
 8048337:	00 10                	add    BYTE PTR [eax],dl
 8048339:	a0 04 08 07 02       	mov    al,ds:0x2070804
 804833e:	00 00                	add    BYTE PTR [eax],al
 8048340:	14 a0                	adc    al,0xa0
 8048342:	04 08                	add    al,0x8
 8048344:	07                   	pop    es
 8048345:	03 00                	add    eax,DWORD PTR [eax]
 8048347:	00 18                	add    BYTE PTR [eax],bl
 8048349:	a0 04 08 07 04       	mov    al,ds:0x4070804
 804834e:	00 00                	add    BYTE PTR [eax],al
 8048350:	1c a0                	sbb    al,0xa0
 8048352:	04 08                	add    al,0x8
 8048354:	07                   	pop    es
 8048355:	05 00 00 20 a0       	add    eax,0xa0200000
 804835a:	04 08                	add    al,0x8
 804835c:	07                   	pop    es
 804835d:	06                   	push   es
	...

Disassembly of section .init:

08048360 <_init>:
 8048360:	53                   	push   ebx
 8048361:	83 ec 08             	sub    esp,0x8
 8048364:	e8 c7 00 00 00       	call   8048430 <__x86.get_pc_thunk.bx>
 8048369:	81 c3 97 1c 00 00    	add    ebx,0x1c97
 804836f:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048375:	85 c0                	test   eax,eax
 8048377:	74 05                	je     804837e <_init+0x1e>
 8048379:	e8 42 00 00 00       	call   80483c0 <__gmon_start__@plt>
 804837e:	83 c4 08             	add    esp,0x8
 8048381:	5b                   	pop    ebx
 8048382:	c3                   	ret    

Disassembly of section .plt:

08048390 <printf@plt-0x10>:
 8048390:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048396:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804839c:	00 00                	add    BYTE PTR [eax],al
	...

080483a0 <printf@plt>:
 80483a0:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 80483a6:	68 00 00 00 00       	push   0x0
 80483ab:	e9 e0 ff ff ff       	jmp    8048390 <_init+0x30>

080483b0 <fgets@plt>:
 80483b0:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 80483b6:	68 08 00 00 00       	push   0x8
 80483bb:	e9 d0 ff ff ff       	jmp    8048390 <_init+0x30>

080483c0 <__gmon_start__@plt>:
 80483c0:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 80483c6:	68 10 00 00 00       	push   0x10
 80483cb:	e9 c0 ff ff ff       	jmp    8048390 <_init+0x30>

080483d0 <exit@plt>:
 80483d0:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 80483d6:	68 18 00 00 00       	push   0x18
 80483db:	e9 b0 ff ff ff       	jmp    8048390 <_init+0x30>

080483e0 <__libc_start_main@plt>:
 80483e0:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 80483e6:	68 20 00 00 00       	push   0x20
 80483eb:	e9 a0 ff ff ff       	jmp    8048390 <_init+0x30>

080483f0 <setvbuf@plt>:
 80483f0:	ff 25 20 a0 04 08    	jmp    DWORD PTR ds:0x804a020
 80483f6:	68 28 00 00 00       	push   0x28
 80483fb:	e9 90 ff ff ff       	jmp    8048390 <_init+0x30>

Disassembly of section .text:

08048400 <_start>:
 8048400:	31 ed                	xor    ebp,ebp
 8048402:	5e                   	pop    esi
 8048403:	89 e1                	mov    ecx,esp
 8048405:	83 e4 f0             	and    esp,0xfffffff0
 8048408:	50                   	push   eax
 8048409:	54                   	push   esp
 804840a:	52                   	push   edx
 804840b:	68 f0 85 04 08       	push   0x80485f0
 8048410:	68 80 85 04 08       	push   0x8048580
 8048415:	51                   	push   ecx
 8048416:	56                   	push   esi
 8048417:	68 fd 84 04 08       	push   0x80484fd
 804841c:	e8 bf ff ff ff       	call   80483e0 <__libc_start_main@plt>
 8048421:	f4                   	hlt    
 8048422:	66 90                	xchg   ax,ax
 8048424:	66 90                	xchg   ax,ax
 8048426:	66 90                	xchg   ax,ax
 8048428:	66 90                	xchg   ax,ax
 804842a:	66 90                	xchg   ax,ax
 804842c:	66 90                	xchg   ax,ax
 804842e:	66 90                	xchg   ax,ax

08048430 <__x86.get_pc_thunk.bx>:
 8048430:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048433:	c3                   	ret    
 8048434:	66 90                	xchg   ax,ax
 8048436:	66 90                	xchg   ax,ax
 8048438:	66 90                	xchg   ax,ax
 804843a:	66 90                	xchg   ax,ax
 804843c:	66 90                	xchg   ax,ax
 804843e:	66 90                	xchg   ax,ax

08048440 <deregister_tm_clones>:
 8048440:	b8 2f a0 04 08       	mov    eax,0x804a02f
 8048445:	2d 2c a0 04 08       	sub    eax,0x804a02c
 804844a:	83 f8 06             	cmp    eax,0x6
 804844d:	77 01                	ja     8048450 <deregister_tm_clones+0x10>
 804844f:	c3                   	ret    
 8048450:	b8 00 00 00 00       	mov    eax,0x0
 8048455:	85 c0                	test   eax,eax
 8048457:	74 f6                	je     804844f <deregister_tm_clones+0xf>
 8048459:	55                   	push   ebp
 804845a:	89 e5                	mov    ebp,esp
 804845c:	83 ec 18             	sub    esp,0x18
 804845f:	c7 04 24 2c a0 04 08 	mov    DWORD PTR [esp],0x804a02c
 8048466:	ff d0                	call   eax
 8048468:	c9                   	leave  
 8048469:	c3                   	ret    
 804846a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048470 <register_tm_clones>:
 8048470:	b8 2c a0 04 08       	mov    eax,0x804a02c
 8048475:	2d 2c a0 04 08       	sub    eax,0x804a02c
 804847a:	c1 f8 02             	sar    eax,0x2
 804847d:	89 c2                	mov    edx,eax
 804847f:	c1 ea 1f             	shr    edx,0x1f
 8048482:	01 d0                	add    eax,edx
 8048484:	d1 f8                	sar    eax,1
 8048486:	75 01                	jne    8048489 <register_tm_clones+0x19>
 8048488:	c3                   	ret    
 8048489:	ba 00 00 00 00       	mov    edx,0x0
 804848e:	85 d2                	test   edx,edx
 8048490:	74 f6                	je     8048488 <register_tm_clones+0x18>
 8048492:	55                   	push   ebp
 8048493:	89 e5                	mov    ebp,esp
 8048495:	83 ec 18             	sub    esp,0x18
 8048498:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804849c:	c7 04 24 2c a0 04 08 	mov    DWORD PTR [esp],0x804a02c
 80484a3:	ff d2                	call   edx
 80484a5:	c9                   	leave  
 80484a6:	c3                   	ret    
 80484a7:	89 f6                	mov    esi,esi
 80484a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080484b0 <__do_global_dtors_aux>:
 80484b0:	80 3d 64 a0 04 08 00 	cmp    BYTE PTR ds:0x804a064,0x0
 80484b7:	75 13                	jne    80484cc <__do_global_dtors_aux+0x1c>
 80484b9:	55                   	push   ebp
 80484ba:	89 e5                	mov    ebp,esp
 80484bc:	83 ec 08             	sub    esp,0x8
 80484bf:	e8 7c ff ff ff       	call   8048440 <deregister_tm_clones>
 80484c4:	c6 05 64 a0 04 08 01 	mov    BYTE PTR ds:0x804a064,0x1
 80484cb:	c9                   	leave  
 80484cc:	f3 c3                	repz ret 
 80484ce:	66 90                	xchg   ax,ax

080484d0 <frame_dummy>:
 80484d0:	a1 10 9f 04 08       	mov    eax,ds:0x8049f10
 80484d5:	85 c0                	test   eax,eax
 80484d7:	74 1f                	je     80484f8 <frame_dummy+0x28>
 80484d9:	b8 00 00 00 00       	mov    eax,0x0
 80484de:	85 c0                	test   eax,eax
 80484e0:	74 16                	je     80484f8 <frame_dummy+0x28>
 80484e2:	55                   	push   ebp
 80484e3:	89 e5                	mov    ebp,esp
 80484e5:	83 ec 18             	sub    esp,0x18
 80484e8:	c7 04 24 10 9f 04 08 	mov    DWORD PTR [esp],0x8049f10
 80484ef:	ff d0                	call   eax
 80484f1:	c9                   	leave  
 80484f2:	e9 79 ff ff ff       	jmp    8048470 <register_tm_clones>
 80484f7:	90                   	nop
 80484f8:	e9 73 ff ff ff       	jmp    8048470 <register_tm_clones>

080484fd <main>:
 80484fd:	55                   	push   ebp
 80484fe:	89 e5                	mov    ebp,esp
 8048500:	83 e4 f0             	and    esp,0xfffffff0
 8048503:	81 ec e0 00 00 00    	sub    esp,0xe0
 8048509:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 804850f:	89 84 24 dc 00 00 00 	mov    DWORD PTR [esp+0xdc],eax
 8048516:	31 c0                	xor    eax,eax
 8048518:	a1 60 a0 04 08       	mov    eax,ds:0x804a060
 804851d:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
 8048524:	00 
 8048525:	c7 44 24 08 02 00 00 	mov    DWORD PTR [esp+0x8],0x2
 804852c:	00 
 804852d:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 8048534:	00 
 8048535:	89 04 24             	mov    DWORD PTR [esp],eax
 8048538:	e8 b3 fe ff ff       	call   80483f0 <setvbuf@plt>
 804853d:	eb 0c                	jmp    804854b <main+0x4e>
 804853f:	8d 44 24 14          	lea    eax,[esp+0x14]
 8048543:	89 04 24             	mov    DWORD PTR [esp],eax
 8048546:	e8 55 fe ff ff       	call   80483a0 <printf@plt>
 804854b:	a1 40 a0 04 08       	mov    eax,ds:0x804a040
 8048550:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048554:	c7 44 24 04 c8 00 00 	mov    DWORD PTR [esp+0x4],0xc8
 804855b:	00 
 804855c:	8d 44 24 14          	lea    eax,[esp+0x14]
 8048560:	89 04 24             	mov    DWORD PTR [esp],eax
 8048563:	e8 48 fe ff ff       	call   80483b0 <fgets@plt>
 8048568:	85 c0                	test   eax,eax
 804856a:	75 d3                	jne    804853f <main+0x42>
 804856c:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 8048573:	e8 58 fe ff ff       	call   80483d0 <exit@plt>
 8048578:	66 90                	xchg   ax,ax
 804857a:	66 90                	xchg   ax,ax
 804857c:	66 90                	xchg   ax,ax
 804857e:	66 90                	xchg   ax,ax

08048580 <__libc_csu_init>:
 8048580:	55                   	push   ebp
 8048581:	57                   	push   edi
 8048582:	31 ff                	xor    edi,edi
 8048584:	56                   	push   esi
 8048585:	53                   	push   ebx
 8048586:	e8 a5 fe ff ff       	call   8048430 <__x86.get_pc_thunk.bx>
 804858b:	81 c3 75 1a 00 00    	add    ebx,0x1a75
 8048591:	83 ec 1c             	sub    esp,0x1c
 8048594:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 8048598:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804859e:	e8 bd fd ff ff       	call   8048360 <_init>
 80485a3:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 80485a9:	29 c6                	sub    esi,eax
 80485ab:	c1 fe 02             	sar    esi,0x2
 80485ae:	85 f6                	test   esi,esi
 80485b0:	74 27                	je     80485d9 <__libc_csu_init+0x59>
 80485b2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80485b8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 80485bc:	89 2c 24             	mov    DWORD PTR [esp],ebp
 80485bf:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80485c3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 80485c7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80485cb:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 80485d2:	83 c7 01             	add    edi,0x1
 80485d5:	39 f7                	cmp    edi,esi
 80485d7:	75 df                	jne    80485b8 <__libc_csu_init+0x38>
 80485d9:	83 c4 1c             	add    esp,0x1c
 80485dc:	5b                   	pop    ebx
 80485dd:	5e                   	pop    esi
 80485de:	5f                   	pop    edi
 80485df:	5d                   	pop    ebp
 80485e0:	c3                   	ret    
 80485e1:	eb 0d                	jmp    80485f0 <__libc_csu_fini>
 80485e3:	90                   	nop
 80485e4:	90                   	nop
 80485e5:	90                   	nop
 80485e6:	90                   	nop
 80485e7:	90                   	nop
 80485e8:	90                   	nop
 80485e9:	90                   	nop
 80485ea:	90                   	nop
 80485eb:	90                   	nop
 80485ec:	90                   	nop
 80485ed:	90                   	nop
 80485ee:	90                   	nop
 80485ef:	90                   	nop

080485f0 <__libc_csu_fini>:
 80485f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080485f4 <_fini>:
 80485f4:	53                   	push   ebx
 80485f5:	83 ec 08             	sub    esp,0x8
 80485f8:	e8 33 fe ff ff       	call   8048430 <__x86.get_pc_thunk.bx>
 80485fd:	81 c3 03 1a 00 00    	add    ebx,0x1a03
 8048603:	83 c4 08             	add    esp,0x8
 8048606:	5b                   	pop    ebx
 8048607:	c3                   	ret    

Disassembly of section .rodata:

08048608 <_fp_hw>:
 8048608:	03 00                	add    eax,DWORD PTR [eax]
	...

0804860c <_IO_stdin_used>:
 804860c:	01 00                	add    DWORD PTR [eax],eax
 804860e:	02 00                	add    al,BYTE PTR [eax]

Disassembly of section .eh_frame_hdr:

08048610 <.eh_frame_hdr>:
 8048610:	01 1b                	add    DWORD PTR [ebx],ebx
 8048612:	03 3b                	add    edi,DWORD PTR [ebx]
 8048614:	28 00                	sub    BYTE PTR [eax],al
 8048616:	00 00                	add    BYTE PTR [eax],al
 8048618:	04 00                	add    al,0x0
 804861a:	00 00                	add    BYTE PTR [eax],al
 804861c:	80 fd ff             	cmp    ch,0xff
 804861f:	ff 44 00 00          	inc    DWORD PTR [eax+eax*1+0x0]
 8048623:	00 ed                	add    ch,ch
 8048625:	fe                   	(bad)  
 8048626:	ff                   	(bad)  
 8048627:	ff 68 00             	jmp    FWORD PTR [eax+0x0]
 804862a:	00 00                	add    BYTE PTR [eax],al
 804862c:	70 ff                	jo     804862d <_IO_stdin_used+0x21>
 804862e:	ff                   	(bad)  
 804862f:	ff 84 00 00 00 e0 ff 	inc    DWORD PTR [eax+eax*1-0x200000]
 8048636:	ff                   	(bad)  
 8048637:	ff c0                	inc    eax
 8048639:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

0804863c <__FRAME_END__-0xa8>:
 804863c:	14 00                	adc    al,0x0
 804863e:	00 00                	add    BYTE PTR [eax],al
 8048640:	00 00                	add    BYTE PTR [eax],al
 8048642:	00 00                	add    BYTE PTR [eax],al
 8048644:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 8048647:	00 01                	add    BYTE PTR [ecx],al
 8048649:	7c 08                	jl     8048653 <_IO_stdin_used+0x47>
 804864b:	01 1b                	add    DWORD PTR [ebx],ebx
 804864d:	0c 04                	or     al,0x4
 804864f:	04 88                	add    al,0x88
 8048651:	01 00                	add    DWORD PTR [eax],eax
 8048653:	00 20                	add    BYTE PTR [eax],ah
 8048655:	00 00                	add    BYTE PTR [eax],al
 8048657:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804865a:	00 00                	add    BYTE PTR [eax],al
 804865c:	34 fd                	xor    al,0xfd
 804865e:	ff                   	(bad)  
 804865f:	ff 70 00             	push   DWORD PTR [eax+0x0]
 8048662:	00 00                	add    BYTE PTR [eax],al
 8048664:	00 0e                	add    BYTE PTR [esi],cl
 8048666:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 8048669:	0c 4a                	or     al,0x4a
 804866b:	0f 0b                	ud2    
 804866d:	74 04                	je     8048673 <_IO_stdin_used+0x67>
 804866f:	78 00                	js     8048671 <_IO_stdin_used+0x65>
 8048671:	3f                   	aas    
 8048672:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 8048674:	2a 32                	sub    dh,BYTE PTR [edx]
 8048676:	24 22                	and    al,0x22
 8048678:	18 00                	sbb    BYTE PTR [eax],al
 804867a:	00 00                	add    BYTE PTR [eax],al
 804867c:	40                   	inc    eax
 804867d:	00 00                	add    BYTE PTR [eax],al
 804867f:	00 7d fe             	add    BYTE PTR [ebp-0x2],bh
 8048682:	ff                   	(bad)  
 8048683:	ff                   	(bad)  
 8048684:	7b 00                	jnp    8048686 <_IO_stdin_used+0x7a>
 8048686:	00 00                	add    BYTE PTR [eax],al
 8048688:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 804868b:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 8048691:	00 00                	add    BYTE PTR [eax],al
 8048693:	00 38                	add    BYTE PTR [eax],bh
 8048695:	00 00                	add    BYTE PTR [eax],al
 8048697:	00 5c 00 00          	add    BYTE PTR [eax+eax*1+0x0],bl
 804869b:	00 e4                	add    ah,ah
 804869d:	fe                   	(bad)  
 804869e:	ff                   	(bad)  
 804869f:	ff 61 00             	jmp    DWORD PTR [ecx+0x0]
 80486a2:	00 00                	add    BYTE PTR [eax],al
 80486a4:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80486a7:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 80486ad:	87 03                	xchg   DWORD PTR [ebx],eax
 80486af:	43                   	inc    ebx
 80486b0:	0e                   	push   cs
 80486b1:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 80486b7:	83 05 4e 0e 30 02 48 	add    DWORD PTR ds:0x2300e4e,0x48
 80486be:	0e                   	push   cs
 80486bf:	14 41                	adc    al,0x41
 80486c1:	c3                   	ret    
 80486c2:	0e                   	push   cs
 80486c3:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 80486c6:	0e                   	push   cs
 80486c7:	0c 41                	or     al,0x41
 80486c9:	c7                   	(bad)  
 80486ca:	0e                   	push   cs
 80486cb:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 80486ce:	0e                   	push   cs
 80486cf:	04 10                	add    al,0x10
 80486d1:	00 00                	add    BYTE PTR [eax],al
 80486d3:	00 98 00 00 00 18    	add    BYTE PTR [eax+0x18000000],bl
 80486d9:	ff                   	(bad)  
 80486da:	ff                   	(bad)  
 80486db:	ff 02                	inc    DWORD PTR [edx]
 80486dd:	00 00                	add    BYTE PTR [eax],al
 80486df:	00 00                	add    BYTE PTR [eax],al
 80486e1:	00 00                	add    BYTE PTR [eax],al
	...

080486e4 <__FRAME_END__>:
 80486e4:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	d0                   	.byte 0xd0
 8049f09:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	b0 84                	mov    al,0x84
 8049f0e:	04 08                	add    al,0x8

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    DWORD PTR [eax],eax
 8049f16:	00 00                	add    BYTE PTR [eax],al
 8049f18:	01 00                	add    DWORD PTR [eax],eax
 8049f1a:	00 00                	add    BYTE PTR [eax],al
 8049f1c:	0c 00                	or     al,0x0
 8049f1e:	00 00                	add    BYTE PTR [eax],al
 8049f20:	60                   	pusha  
 8049f21:	83 04 08 0d          	add    DWORD PTR [eax+ecx*1],0xd
 8049f25:	00 00                	add    BYTE PTR [eax],al
 8049f27:	00 f4                	add    ah,dh
 8049f29:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 8049f2c:	19 00                	sbb    DWORD PTR [eax],eax
 8049f2e:	00 00                	add    BYTE PTR [eax],al
 8049f30:	08 9f 04 08 1b 00    	or     BYTE PTR [edi+0x1b0804],bl
 8049f36:	00 00                	add    BYTE PTR [eax],al
 8049f38:	04 00                	add    al,0x0
 8049f3a:	00 00                	add    BYTE PTR [eax],al
 8049f3c:	1a 00                	sbb    al,BYTE PTR [eax]
 8049f3e:	00 00                	add    BYTE PTR [eax],al
 8049f40:	0c 9f                	or     al,0x9f
 8049f42:	04 08                	add    al,0x8
 8049f44:	1c 00                	sbb    al,0x0
 8049f46:	00 00                	add    BYTE PTR [eax],al
 8049f48:	04 00                	add    al,0x0
 8049f4a:	00 00                	add    BYTE PTR [eax],al
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
 8049f51:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049f58:	78 82                	js     8049edc <__FRAME_END__+0x17f8>
 8049f5a:	04 08                	add    al,0x8
 8049f5c:	06                   	push   es
 8049f5d:	00 00                	add    BYTE PTR [eax],al
 8049f5f:	00 d8                	add    al,bl
 8049f61:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 8049f68:	6c                   	ins    BYTE PTR es:[edi],dx
 8049f69:	00 00                	add    BYTE PTR [eax],al
 8049f6b:	00 0b                	add    BYTE PTR [ebx],cl
 8049f6d:	00 00                	add    BYTE PTR [eax],al
 8049f6f:	00 10                	add    BYTE PTR [eax],dl
 8049f71:	00 00                	add    BYTE PTR [eax],al
 8049f73:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049f79:	00 00                	add    BYTE PTR [eax],al
 8049f7b:	00 03                	add    BYTE PTR [ebx],al
 8049f7d:	00 00                	add    BYTE PTR [eax],al
 8049f7f:	00 00                	add    BYTE PTR [eax],al
 8049f81:	a0 04 08 02 00       	mov    al,ds:0x20804
 8049f86:	00 00                	add    BYTE PTR [eax],al
 8049f88:	30 00                	xor    BYTE PTR [eax],al
 8049f8a:	00 00                	add    BYTE PTR [eax],al
 8049f8c:	14 00                	adc    al,0x0
 8049f8e:	00 00                	add    BYTE PTR [eax],al
 8049f90:	11 00                	adc    DWORD PTR [eax],eax
 8049f92:	00 00                	add    BYTE PTR [eax],al
 8049f94:	17                   	pop    ss
 8049f95:	00 00                	add    BYTE PTR [eax],al
 8049f97:	00 30                	add    BYTE PTR [eax],dh
 8049f99:	83 04 08 11          	add    DWORD PTR [eax+ecx*1],0x11
 8049f9d:	00 00                	add    BYTE PTR [eax],al
 8049f9f:	00 18                	add    BYTE PTR [eax],bl
 8049fa1:	83 04 08 12          	add    DWORD PTR [eax+ecx*1],0x12
 8049fa5:	00 00                	add    BYTE PTR [eax],al
 8049fa7:	00 18                	add    BYTE PTR [eax],bl
 8049fa9:	00 00                	add    BYTE PTR [eax],al
 8049fab:	00 13                	add    BYTE PTR [ebx],dl
 8049fad:	00 00                	add    BYTE PTR [eax],al
 8049faf:	00 08                	add    BYTE PTR [eax],cl
 8049fb1:	00 00                	add    BYTE PTR [eax],al
 8049fb3:	00 fe                	add    dh,bh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f f8             	jmp    FWORD PTR [edi-0x8]
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    al,0x8
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 8049fc1:	00 00                	add    BYTE PTR [eax],al
 8049fc3:	00 f0                	add    al,dh
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f e4             	jmp    FWORD PTR [edi-0x1c]
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    al,0x8
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    al,0x9f
 804a002:	04 08                	add    al,0x8
	...
 804a00c:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 804a00d:	83 04 08 b6          	add    DWORD PTR [eax+ecx*1],0xffffffb6
 804a011:	83 04 08 c6          	add    DWORD PTR [eax+ecx*1],0xffffffc6
 804a015:	83 04 08 d6          	add    DWORD PTR [eax+ecx*1],0xffffffd6
 804a019:	83 04 08 e6          	add    DWORD PTR [eax+ecx*1],0xffffffe6
 804a01d:	83 04 08 f6          	add    DWORD PTR [eax+ecx*1],0xfffffff6
 804a021:	83                   	.byte 0x83
 804a022:	04 08                	add    al,0x8

Disassembly of section .data:

0804a024 <__data_start>:
 804a024:	00 00                	add    BYTE PTR [eax],al
	...

0804a028 <__dso_handle>:
 804a028:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0804a040 <stdin@@GLIBC_2.0>:
	...

0804a060 <stdout@@GLIBC_2.0>:
 804a060:	00 00                	add    BYTE PTR [eax],al
	...

0804a064 <completed.6591>:
 804a064:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x80482e8>
   a:	74 75                	je     81 <_init-0x80482df>
   c:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
   f:	38 2e                	cmp    BYTE PTR [esi],ch
  11:	34 2d                	xor    al,0x2d
  13:	32 75 62             	xor    dh,BYTE PTR [ebp+0x62]
  16:	75 6e                	jne    86 <_init-0x80482da>
  18:	74 75                	je     8f <_init-0x80482d1>
  1a:	31 7e 31             	xor    DWORD PTR [esi+0x31],edi
  1d:	34 2e                	xor    al,0x2e
  1f:	30 34 29             	xor    BYTE PTR [ecx+ebp*1],dh
  22:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  25:	38 2e                	cmp    BYTE PTR [esi],ch
  27:	34 00                	xor    al,0x0
  29:	47                   	inc    edi
  2a:	43                   	inc    ebx
  2b:	43                   	inc    ebx
  2c:	3a 20                	cmp    ah,BYTE PTR [eax]
  2e:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  31:	75 6e                	jne    a1 <_init-0x80482bf>
  33:	74 75                	je     aa <_init-0x80482b6>
  35:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  38:	38 2e                	cmp    BYTE PTR [esi],ch
  3a:	32 2d 31 39 75 62    	xor    ch,BYTE PTR ds:0x62753931
  40:	75 6e                	jne    b0 <_init-0x80482b0>
  42:	74 75                	je     b9 <_init-0x80482a7>
  44:	31 29                	xor    DWORD PTR [ecx],ebp
  46:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  49:	38 2e                	cmp    BYTE PTR [esi],ch
  4b:	32 00                	xor    al,BYTE PTR [eax]

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	fd                   	std    
  11:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
  14:	7b 00                	jnp    16 <_init-0x804834a>
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	de 02                	fiadd  WORD PTR [edx]
   2:	00 00                	add    BYTE PTR [eax],al
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 01                	add    al,0x1
   c:	86 00                	xchg   BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	01 34 01             	add    DWORD PTR [ecx+eax*1],esi
  13:	00 00                	add    BYTE PTR [eax],al
  15:	13 02                	adc    eax,DWORD PTR [edx]
  17:	00 00                	add    BYTE PTR [eax],al
  19:	fd                   	std    
  1a:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
  1d:	7b 00                	jnp    1f <_init-0x8048341>
  1f:	00 00                	add    BYTE PTR [eax],al
  21:	00 00                	add    BYTE PTR [eax],al
  23:	00 00                	add    BYTE PTR [eax],al
  25:	02 17                	add    dl,BYTE PTR [edi]
  27:	00 00                	add    BYTE PTR [eax],al
  29:	00 02                	add    BYTE PTR [edx],al
  2b:	d4 30                	aam    0x30
  2d:	00 00                	add    BYTE PTR [eax],al
  2f:	00 03                	add    BYTE PTR [ebx],al
  31:	04 07                	add    al,0x7
  33:	5b                   	pop    ebx
  34:	01 00                	add    DWORD PTR [eax],eax
  36:	00 03                	add    BYTE PTR [ebx],al
  38:	01 08                	add    DWORD PTR [eax],ecx
  3a:	78 00                	js     3c <_init-0x8048324>
  3c:	00 00                	add    BYTE PTR [eax],al
  3e:	03 02                	add    eax,DWORD PTR [edx]
  40:	07                   	pop    es
  41:	c7 00 00 00 03 04    	mov    DWORD PTR [eax],0x4030000
  47:	07                   	pop    es
  48:	56                   	push   esi
  49:	01 00                	add    DWORD PTR [eax],eax
  4b:	00 03                	add    BYTE PTR [ebx],al
  4d:	01 06                	add    DWORD PTR [esi],eax
  4f:	7a 00                	jp     51 <_init-0x804830f>
  51:	00 00                	add    BYTE PTR [eax],al
  53:	03 02                	add    eax,DWORD PTR [edx]
  55:	05 cf 01 00 00       	add    eax,0x1cf
  5a:	04 04                	add    al,0x4
  5c:	05 69 6e 74 00       	add    eax,0x746e69
  61:	03 08                	add    ecx,DWORD PTR [eax]
  63:	05 ac 01 00 00       	add    eax,0x1ac
  68:	03 08                	add    ecx,DWORD PTR [eax]
  6a:	07                   	pop    es
  6b:	51                   	push   ecx
  6c:	01 00                	add    DWORD PTR [eax],eax
  6e:	00 02                	add    BYTE PTR [edx],al
  70:	19 01                	sbb    DWORD PTR [ecx],eax
  72:	00 00                	add    BYTE PTR [eax],al
  74:	03 37                	add    esi,DWORD PTR [edi]
  76:	61                   	popa   
  77:	00 00                	add    BYTE PTR [eax],al
  79:	00 02                	add    BYTE PTR [edx],al
  7b:	92                   	xchg   edx,eax
  7c:	01 00                	add    DWORD PTR [eax],eax
  7e:	00 03                	add    BYTE PTR [ebx],al
  80:	83 85 00 00 00 03 04 	add    DWORD PTR [ebp+0x3000000],0x4
  87:	05 b1 01 00 00       	add    eax,0x1b1
  8c:	02 00                	add    al,BYTE PTR [eax]
  8e:	00 00                	add    BYTE PTR [eax],al
  90:	00 03                	add    BYTE PTR [ebx],al
  92:	84 6f 00             	test   BYTE PTR [edi+0x0],ch
  95:	00 00                	add    BYTE PTR [eax],al
  97:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
  9a:	a3 01 00 00 05       	mov    ds:0x5000001,eax
  9f:	04 06                	add    al,0x6
  a1:	04 a6                	add    al,0xa6
  a3:	00 00                	add    BYTE PTR [eax],al
  a5:	00 03                	add    BYTE PTR [ebx],al
  a7:	01 06                	add    DWORD PTR [esi],eax
  a9:	81 00 00 00 07 1e    	add    DWORD PTR [eax],0x1e070000
  af:	00 00                	add    BYTE PTR [eax],al
  b1:	00 94 04 f5 2d 02 00 	add    BYTE PTR [esp+eax*1+0x22df5],dl
  b8:	00 08                	add    BYTE PTR [eax],cl
  ba:	e9 01 00 00 04       	jmp    40000c0 <_init-0x40482a0>
  bf:	f6 5a 00             	neg    BYTE PTR [edx+0x0]
  c2:	00 00                	add    BYTE PTR [eax],al
  c4:	00 08                	add    BYTE PTR [eax],cl
  c6:	50                   	push   eax
  c7:	00 00                	add    BYTE PTR [eax],al
  c9:	00 04 fb             	add    BYTE PTR [ebx+edi*8],al
  cc:	a0 00 00 00 04       	mov    al,ds:0x4000000
  d1:	08 0a                	or     BYTE PTR [edx],cl
  d3:	00 00                	add    BYTE PTR [eax],al
  d5:	00 04 fc             	add    BYTE PTR [esp+edi*8],al
  d8:	a0 00 00 00 08       	mov    al,ds:0x8000000
  dd:	08 30                	or     BYTE PTR [eax],dh
  df:	02 00                	add    al,BYTE PTR [eax]
  e1:	00 04 fd a0 00 00 00 	add    BYTE PTR [edi*8+0xa0],al
  e8:	0c 08                	or     al,0x8
  ea:	27                   	daa    
  eb:	00 00                	add    BYTE PTR [eax],al
  ed:	00 04 fe             	add    BYTE PTR [esi+edi*8],al
  f0:	a0 00 00 00 10       	mov    al,ds:0x10000000
  f5:	08 f7                	or     bh,dh
  f7:	01 00                	add    DWORD PTR [eax],eax
  f9:	00 04 ff             	add    BYTE PTR [edi+edi*8],al
  fc:	a0 00 00 00 14       	mov    al,ds:0x14000000
 101:	09 c1                	or     ecx,eax
 103:	01 00                	add    DWORD PTR [eax],eax
 105:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 108:	01 a0 00 00 00 18    	add    DWORD PTR [eax+0x18000000],esp
 10e:	09 70 01             	or     DWORD PTR [eax+0x1],esi
 111:	00 00                	add    BYTE PTR [eax],al
 113:	04 01                	add    al,0x1
 115:	01 a0 00 00 00 1c    	add    DWORD PTR [eax+0x1c000000],esp
 11b:	09 36                	or     DWORD PTR [esi],esi
 11d:	00 00                	add    BYTE PTR [eax],al
 11f:	00 04 02             	add    BYTE PTR [edx+eax*1],al
 122:	01 a0 00 00 00 20    	add    DWORD PTR [eax+0x20000000],esp
 128:	09 6a 00             	or     DWORD PTR [edx+0x0],ebp
 12b:	00 00                	add    BYTE PTR [eax],al
 12d:	04 04                	add    al,0x4
 12f:	01 a0 00 00 00 24    	add    DWORD PTR [eax+0x24000000],esp
 135:	09 d9                	or     ecx,ebx
 137:	01 00                	add    DWORD PTR [eax],eax
 139:	00 04 05 01 a0 00 00 	add    BYTE PTR [eax*1+0xa001],al
 140:	00 28                	add    BYTE PTR [eax],ch
 142:	09 e0                	or     eax,esp
 144:	00 00                	add    BYTE PTR [eax],al
 146:	00 04 06             	add    BYTE PTR [esi+eax*1],al
 149:	01 a0 00 00 00 2c    	add    DWORD PTR [eax+0x2c000000],esp
 14f:	09 f8                	or     eax,edi
 151:	00 00                	add    BYTE PTR [eax],al
 153:	00 04 08             	add    BYTE PTR [eax+ecx*1],al
 156:	01 65 02             	add    DWORD PTR [ebp+0x2],esp
 159:	00 00                	add    BYTE PTR [eax],al
 15b:	30 09                	xor    BYTE PTR [ecx],cl
 15d:	63 00                	arpl   WORD PTR [eax],ax
 15f:	00 00                	add    BYTE PTR [eax],al
 161:	04 0a                	add    al,0xa
 163:	01 6b 02             	add    DWORD PTR [ebx+0x2],ebp
 166:	00 00                	add    BYTE PTR [eax],al
 168:	34 09                	xor    al,0x9
 16a:	68 01 00 00 04       	push   0x4000001
 16f:	0c 01                	or     al,0x1
 171:	5a                   	pop    edx
 172:	00 00                	add    BYTE PTR [eax],al
 174:	00 38                	add    BYTE PTR [eax],bh
 176:	09 0b                	or     DWORD PTR [ebx],ecx
 178:	01 00                	add    DWORD PTR [eax],eax
 17a:	00 04 10             	add    BYTE PTR [eax+edx*1],al
 17d:	01 5a 00             	add    DWORD PTR [edx+0x0],ebx
 180:	00 00                	add    BYTE PTR [eax],al
 182:	3c 09                	cmp    al,0x9
 184:	22 01                	and    al,BYTE PTR [ecx]
 186:	00 00                	add    BYTE PTR [eax],al
 188:	04 12                	add    al,0x12
 18a:	01 7a 00             	add    DWORD PTR [edx+0x0],edi
 18d:	00 00                	add    BYTE PTR [eax],al
 18f:	40                   	inc    eax
 190:	09 45 01             	or     DWORD PTR [ebp+0x1],eax
 193:	00 00                	add    BYTE PTR [eax],al
 195:	04 16                	add    al,0x16
 197:	01 3e                	add    DWORD PTR [esi],edi
 199:	00 00                	add    BYTE PTR [eax],al
 19b:	00 44 09 83          	add    BYTE PTR [ecx+ecx*1-0x7d],al
 19f:	01 00                	add    DWORD PTR [eax],eax
 1a1:	00 04 17             	add    BYTE PTR [edi+edx*1],al
 1a4:	01 4c 00 00          	add    DWORD PTR [eax+eax*1+0x0],ecx
 1a8:	00 46 09             	add    BYTE PTR [esi+0x9],al
 1ab:	3e 02 00             	add    al,BYTE PTR ds:[eax]
 1ae:	00 04 18             	add    BYTE PTR [eax+ebx*1],al
 1b1:	01 71 02             	add    DWORD PTR [ecx+0x2],esi
 1b4:	00 00                	add    BYTE PTR [eax],al
 1b6:	47                   	inc    edi
 1b7:	09 2e                	or     DWORD PTR [esi],ebp
 1b9:	01 00                	add    DWORD PTR [eax],eax
 1bb:	00 04 1c             	add    BYTE PTR [esp+ebx*1],al
 1be:	01 81 02 00 00 48    	add    DWORD PTR [ecx+0x48000002],eax
 1c4:	09 26                	or     DWORD PTR [esi],esp
 1c6:	01 00                	add    DWORD PTR [eax],eax
 1c8:	00 04 25 01 8c 00 00 	add    BYTE PTR [eiz*1+0x8c01],al
 1cf:	00 4c 09 f0          	add    BYTE PTR [ecx+ecx*1-0x10],cl
 1d3:	01 00                	add    DWORD PTR [eax],eax
 1d5:	00 04 2e             	add    BYTE PTR [esi+ebp*1],al
 1d8:	01 9e 00 00 00 54    	add    DWORD PTR [esi+0x54000000],ebx
 1de:	09 42 00             	or     DWORD PTR [edx+0x0],eax
 1e1:	00 00                	add    BYTE PTR [eax],al
 1e3:	04 2f                	add    al,0x2f
 1e5:	01 9e 00 00 00 58    	add    DWORD PTR [esi+0x58000000],ebx
 1eb:	09 49 00             	or     DWORD PTR [ecx+0x0],ecx
 1ee:	00 00                	add    BYTE PTR [eax],al
 1f0:	04 30                	add    al,0x30
 1f2:	01 9e 00 00 00 5c    	add    DWORD PTR [esi+0x5c000000],ebx
 1f8:	09 05 02 00 00 04    	or     DWORD PTR ds:0x4000002,eax
 1fe:	31 01                	xor    DWORD PTR [ecx],eax
 200:	9e                   	sahf   
 201:	00 00                	add    BYTE PTR [eax],al
 203:	00 60 09             	add    BYTE PTR [eax+0x9],ah
 206:	0c 02                	or     al,0x2
 208:	00 00                	add    BYTE PTR [eax],al
 20a:	04 32                	add    al,0x32
 20c:	01 25 00 00 00 64    	add    DWORD PTR ds:0x64000000,esp
 212:	09 5d 00             	or     DWORD PTR [ebp+0x0],ebx
 215:	00 00                	add    BYTE PTR [eax],al
 217:	04 34                	add    al,0x34
 219:	01 5a 00             	add    DWORD PTR [edx+0x0],ebx
 21c:	00 00                	add    BYTE PTR [eax],al
 21e:	68 09 9a 01 00       	push   0x19a09
 223:	00 04 36             	add    BYTE PTR [esi+esi*1],al
 226:	01 87 02 00 00 6c    	add    DWORD PTR [edi+0x6c000002],eax
 22c:	00 0a                	add    BYTE PTR [edx],cl
 22e:	ed                   	in     eax,dx
 22f:	00 00                	add    BYTE PTR [eax],al
 231:	00 04 9a             	add    BYTE PTR [edx+ebx*4],al
 234:	07                   	pop    es
 235:	3a 01                	cmp    al,BYTE PTR [ecx]
 237:	00 00                	add    BYTE PTR [eax],al
 239:	0c 04                	or     al,0x4
 23b:	a0 65 02 00 00       	mov    al,ds:0x265
 240:	08 7d 01             	or     BYTE PTR [ebp+0x1],bh
 243:	00 00                	add    BYTE PTR [eax],al
 245:	04 a1                	add    al,0xa1
 247:	65 02 00             	add    al,BYTE PTR gs:[eax]
 24a:	00 00                	add    BYTE PTR [eax],al
 24c:	08 13                	or     BYTE PTR [ebx],dl
 24e:	01 00                	add    DWORD PTR [eax],eax
 250:	00 04 a2             	add    BYTE PTR [edx+eiz*4],al
 253:	6b 02 00             	imul   eax,DWORD PTR [edx],0x0
 256:	00 04 08             	add    BYTE PTR [eax+ecx*1],al
 259:	01 01                	add    DWORD PTR [ecx],eax
 25b:	00 00                	add    BYTE PTR [eax],al
 25d:	04 a6                	add    al,0xa6
 25f:	5a                   	pop    edx
 260:	00 00                	add    BYTE PTR [eax],al
 262:	00 08                	add    BYTE PTR [eax],cl
 264:	00 06                	add    BYTE PTR [esi],al
 266:	04 34                	add    al,0x34
 268:	02 00                	add    al,BYTE PTR [eax]
 26a:	00 06                	add    BYTE PTR [esi],al
 26c:	04 ad                	add    al,0xad
 26e:	00 00                	add    BYTE PTR [eax],al
 270:	00 0b                	add    BYTE PTR [ebx],cl
 272:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 273:	00 00                	add    BYTE PTR [eax],al
 275:	00 81 02 00 00 0c    	add    BYTE PTR [ecx+0xc000002],al
 27b:	97                   	xchg   edi,eax
 27c:	00 00                	add    BYTE PTR [eax],al
 27e:	00 00                	add    BYTE PTR [eax],al
 280:	00 06                	add    BYTE PTR [esi],al
 282:	04 2d                	add    al,0x2d
 284:	02 00                	add    al,BYTE PTR [eax]
 286:	00 0b                	add    BYTE PTR [ebx],cl
 288:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 289:	00 00                	add    BYTE PTR [eax],al
 28b:	00 97 02 00 00 0c    	add    BYTE PTR [edi+0xc000002],dl
 291:	97                   	xchg   edi,eax
 292:	00 00                	add    BYTE PTR [eax],al
 294:	00 27                	add    BYTE PTR [edi],ah
 296:	00 0d 06 01 00 00    	add    BYTE PTR ds:0x106,cl
 29c:	01 05 fd 84 04 08    	add    DWORD PTR ds:0x80484fd,eax
 2a2:	7b 00                	jnp    2a4 <_init-0x80480bc>
 2a4:	00 00                	add    BYTE PTR [eax],al
 2a6:	01 9c bb 02 00 00 0e 	add    DWORD PTR [ebx+edi*4+0xe000002],ebx
 2ad:	73 74                	jae    323 <_init-0x804803d>
 2af:	72 00                	jb     2b1 <_init-0x80480af>
 2b1:	01 07                	add    DWORD PTR [edi],eax
 2b3:	bb 02 00 00 02       	mov    ebx,0x2000002
 2b8:	74 14                	je     2ce <_init-0x8048092>
 2ba:	00 0b                	add    BYTE PTR [ebx],cl
 2bc:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 2bd:	00 00                	add    BYTE PTR [eax],al
 2bf:	00 cb                	add    bl,cl
 2c1:	02 00                	add    al,BYTE PTR [eax]
 2c3:	00 0c 97             	add    BYTE PTR [edi+edx*4],cl
 2c6:	00 00                	add    BYTE PTR [eax],al
 2c8:	00 c7                	add    bh,al
 2ca:	00 0f                	add    BYTE PTR [edi],cl
 2cc:	da 00                	fiadd  DWORD PTR [eax]
 2ce:	00 00                	add    BYTE PTR [eax],al
 2d0:	05 a8 6b 02 00       	add    eax,0x26ba8
 2d5:	00 0f                	add    BYTE PTR [edi],cl
 2d7:	ba 01 00 00 05       	mov    edx,0x5000001
 2dc:	a9 6b 02 00 00       	test   eax,0x26b
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
   8:	0e                   	push   cs
   9:	1b 0e                	sbb    ecx,DWORD PTR [esi]
   b:	11 01                	adc    DWORD PTR [ecx],eax
   d:	12 06                	adc    al,BYTE PTR [esi]
   f:	10 17                	adc    BYTE PTR [edi],dl
  11:	00 00                	add    BYTE PTR [eax],al
  13:	02 16                	add    dl,BYTE PTR [esi]
  15:	00 03                	add    BYTE PTR [ebx],al
  17:	0e                   	push   cs
  18:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  1a:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  1c:	49                   	dec    ecx
  1d:	13 00                	adc    eax,DWORD PTR [eax]
  1f:	00 03                	add    BYTE PTR [ebx],al
  21:	24 00                	and    al,0x0
  23:	0b 0b                	or     ecx,DWORD PTR [ebx]
  25:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  28:	0e                   	push   cs
  29:	00 00                	add    BYTE PTR [eax],al
  2b:	04 24                	add    al,0x24
  2d:	00 0b                	add    BYTE PTR [ebx],cl
  2f:	0b 3e                	or     edi,DWORD PTR [esi]
  31:	0b 03                	or     eax,DWORD PTR [ebx]
  33:	08 00                	or     BYTE PTR [eax],al
  35:	00 05 0f 00 0b 0b    	add    BYTE PTR ds:0xb0b000f,al
  3b:	00 00                	add    BYTE PTR [eax],al
  3d:	06                   	push   es
  3e:	0f 00 0b             	str    WORD PTR [ebx]
  41:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  44:	00 00                	add    BYTE PTR [eax],al
  46:	07                   	pop    es
  47:	13 01                	adc    eax,DWORD PTR [ecx]
  49:	03 0e                	add    ecx,DWORD PTR [esi]
  4b:	0b 0b                	or     ecx,DWORD PTR [ebx]
  4d:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  4f:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  51:	01 13                	add    DWORD PTR [ebx],edx
  53:	00 00                	add    BYTE PTR [eax],al
  55:	08 0d 00 03 0e 3a    	or     BYTE PTR ds:0x3a0e0300,cl
  5b:	0b 3b                	or     edi,DWORD PTR [ebx]
  5d:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  60:	38 0b                	cmp    BYTE PTR [ebx],cl
  62:	00 00                	add    BYTE PTR [eax],al
  64:	09 0d 00 03 0e 3a    	or     DWORD PTR ds:0x3a0e0300,ecx
  6a:	0b 3b                	or     edi,DWORD PTR [ebx]
  6c:	05 49 13 38 0b       	add    eax,0xb381349
  71:	00 00                	add    BYTE PTR [eax],al
  73:	0a 16                	or     dl,BYTE PTR [esi]
  75:	00 03                	add    BYTE PTR [ebx],al
  77:	0e                   	push   cs
  78:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  7a:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  7c:	00 00                	add    BYTE PTR [eax],al
  7e:	0b 01                	or     eax,DWORD PTR [ecx]
  80:	01 49 13             	add    DWORD PTR [ecx+0x13],ecx
  83:	01 13                	add    DWORD PTR [ebx],edx
  85:	00 00                	add    BYTE PTR [eax],al
  87:	0c 21                	or     al,0x21
  89:	00 49 13             	add    BYTE PTR [ecx+0x13],cl
  8c:	2f                   	das    
  8d:	0b 00                	or     eax,DWORD PTR [eax]
  8f:	00 0d 2e 01 3f 19    	add    BYTE PTR ds:0x193f012e,cl
  95:	03 0e                	add    ecx,DWORD PTR [esi]
  97:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  99:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  9b:	11 01                	adc    DWORD PTR [ecx],eax
  9d:	12 06                	adc    al,BYTE PTR [esi]
  9f:	40                   	inc    eax
  a0:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
  a6:	00 00                	add    BYTE PTR [eax],al
  a8:	0e                   	push   cs
  a9:	34 00                	xor    al,0x0
  ab:	03 08                	add    ecx,DWORD PTR [eax]
  ad:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  af:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  b1:	49                   	dec    ecx
  b2:	13 02                	adc    eax,DWORD PTR [edx]
  b4:	18 00                	sbb    BYTE PTR [eax],al
  b6:	00 0f                	add    BYTE PTR [edi],cl
  b8:	34 00                	xor    al,0x0
  ba:	03 0e                	add    ecx,DWORD PTR [esi]
  bc:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  be:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  c0:	49                   	dec    ecx
  c1:	13 3f                	adc    edi,DWORD PTR [edi]
  c3:	19 3c 19             	sbb    DWORD PTR [ecx+ebx*1],edi
  c6:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	c1 00 00             	rol    DWORD PTR [eax],0x0
   3:	00 02                	add    BYTE PTR [edx],al
   5:	00 a1 00 00 00 01    	add    BYTE PTR [ecx+0x1000000],ah
   b:	01 fb                	add    ebx,edi
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	2f                   	das    
  1c:	75 73                	jne    91 <_init-0x80482cf>
  1e:	72 2f                	jb     4f <_init-0x8048311>
  20:	6c                   	ins    BYTE PTR es:[edi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [edx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0x80482fe>
  2a:	36                   	ss
  2b:	5f                   	pop    edi
  2c:	36                   	ss
  2d:	34 2d                	xor    al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[edi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0x80482f8>
  39:	34 2e                	xor    al,0x2e
  3b:	38 2f                	cmp    BYTE PTR [edi],ch
  3d:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  44:	00 2f                	add    BYTE PTR [edi],ch
  46:	75 73                	jne    bb <_init-0x80482a5>
  48:	72 2f                	jb     79 <_init-0x80482e7>
  4a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  51:	2f                   	das    
  52:	69 33 38 36 2d 6c    	imul   esi,DWORD PTR [ebx],0x6c2d3638
  58:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
  5f:	75 2f                	jne    90 <_init-0x80482d0>
  61:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  64:	73 00                	jae    66 <_init-0x80482fa>
  66:	2f                   	das    
  67:	75 73                	jne    dc <_init-0x8048284>
  69:	72 2f                	jb     9a <_init-0x80482c6>
  6b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  72:	00 00                	add    BYTE PTR [eax],al
  74:	76 75                	jbe    eb <_init-0x8048275>
  76:	6c                   	ins    BYTE PTR es:[edi],dx
  77:	2e 63 00             	arpl   WORD PTR cs:[eax],ax
  7a:	00 00                	add    BYTE PTR [eax],al
  7c:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
  7f:	64                   	fs
  80:	64                   	fs
  81:	65                   	gs
  82:	66                   	data16
  83:	2e                   	cs
  84:	68 00 01 00 00       	push   0x100
  89:	74 79                	je     104 <_init-0x804825c>
  8b:	70 65                	jo     f2 <_init-0x804826e>
  8d:	73 2e                	jae    bd <_init-0x80482a3>
  8f:	68 00 02 00 00       	push   0x200
  94:	6c                   	ins    BYTE PTR es:[edi],dx
  95:	69 62 69 6f 2e 68 00 	imul   esp,DWORD PTR [edx+0x69],0x682e6f
  9c:	03 00                	add    eax,DWORD PTR [eax]
  9e:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
  a1:	64 69 6f 2e 68 00 03 	imul   ebp,DWORD PTR fs:[edi+0x2e],0x30068
  a8:	00 
  a9:	00 00                	add    BYTE PTR [eax],al
  ab:	00 05 02 fd 84 04    	add    BYTE PTR ds:0x484fd02,al
  b1:	08 16                	or     BYTE PTR [esi],dl
  b3:	ba e5 02 25 14       	mov    edx,0x142502e5
  b8:	2f                   	das    
  b9:	00 02                	add    BYTE PTR [edx],al
  bb:	04 01                	add    al,0x1
  bd:	b9 08 f5 02 0c       	mov    ecx,0xc02f508
  c2:	00 01                	add    BYTE PTR [ecx],al
  c4:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	5f                   	pop    edi
   1:	5f                   	pop    edi
   2:	6f                   	outs   dx,DWORD PTR ds:[esi]
   3:	66                   	data16
   4:	66                   	data16
   5:	36                   	ss
   6:	34 5f                	xor    al,0x5f
   8:	74 00                	je     a <_init-0x8048356>
   a:	5f                   	pop    edi
   b:	49                   	dec    ecx
   c:	4f                   	dec    edi
   d:	5f                   	pop    edi
   e:	72 65                	jb     75 <_init-0x80482eb>
  10:	61                   	popa   
  11:	64                   	fs
  12:	5f                   	pop    edi
  13:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  15:	64 00 73 69          	add    BYTE PTR fs:[ebx+0x69],dh
  19:	7a 65                	jp     80 <_init-0x80482e0>
  1b:	5f                   	pop    edi
  1c:	74 00                	je     1e <_init-0x8048342>
  1e:	5f                   	pop    edi
  1f:	49                   	dec    ecx
  20:	4f                   	dec    edi
  21:	5f                   	pop    edi
  22:	46                   	inc    esi
  23:	49                   	dec    ecx
  24:	4c                   	dec    esp
  25:	45                   	inc    ebp
  26:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  29:	4f                   	dec    edi
  2a:	5f                   	pop    edi
  2b:	77 72                	ja     9f <_init-0x80482c1>
  2d:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x65736162
  34:	65 
  35:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  38:	4f                   	dec    edi
  39:	5f                   	pop    edi
  3a:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
  3d:	5f                   	pop    edi
  3e:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  40:	64 00 5f 5f          	add    BYTE PTR fs:[edi+0x5f],bl
  44:	70 61                	jo     a7 <_init-0x80482b9>
  46:	64 32 00             	xor    al,BYTE PTR fs:[eax]
  49:	5f                   	pop    edi
  4a:	5f                   	pop    edi
  4b:	70 61                	jo     ae <_init-0x80482b2>
  4d:	64 33 00             	xor    eax,DWORD PTR fs:[eax]
  50:	5f                   	pop    edi
  51:	49                   	dec    ecx
  52:	4f                   	dec    edi
  53:	5f                   	pop    edi
  54:	72 65                	jb     bb <_init-0x80482a5>
  56:	61                   	popa   
  57:	64                   	fs
  58:	5f                   	pop    edi
  59:	70 74                	jo     cf <_init-0x8048291>
  5b:	72 00                	jb     5d <_init-0x8048303>
  5d:	5f                   	pop    edi
  5e:	6d                   	ins    DWORD PTR es:[edi],dx
  5f:	6f                   	outs   dx,DWORD PTR ds:[esi]
  60:	64 65 00 5f 63       	fs add BYTE PTR fs:gs:[edi+0x63],bl
  65:	68 61 69 6e 00       	push   0x6e6961
  6a:	5f                   	pop    edi
  6b:	49                   	dec    ecx
  6c:	4f                   	dec    edi
  6d:	5f                   	pop    edi
  6e:	73 61                	jae    d1 <_init-0x804828f>
  70:	76 65                	jbe    d7 <_init-0x8048289>
  72:	5f                   	pop    edi
  73:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
  76:	65 00 75 6e          	add    BYTE PTR gs:[ebp+0x6e],dh
  7a:	73 69                	jae    e5 <_init-0x804827b>
  7c:	67 6e                	outs   dx,BYTE PTR ds:[si]
  7e:	65 64 20 63 68       	gs and BYTE PTR fs:gs:[ebx+0x68],ah
  83:	61                   	popa   
  84:	72 00                	jb     86 <_init-0x80482da>
  86:	47                   	inc    edi
  87:	4e                   	dec    esi
  88:	55                   	push   ebp
  89:	20 43 20             	and    BYTE PTR [ebx+0x20],al
  8c:	34 2e                	xor    al,0x2e
  8e:	38 2e                	cmp    BYTE PTR [esi],ch
  90:	34 20                	xor    al,0x20
  92:	2d 6d 33 32 20       	sub    eax,0x2032336d
  97:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  9c:	65                   	gs
  9d:	3d 67 65 6e 65       	cmp    eax,0x656e6567
  a2:	72 69                	jb     10d <_init-0x8048253>
  a4:	63 20                	arpl   WORD PTR [eax],sp
  a6:	2d 6d 61 72 63       	sub    eax,0x6372616d
  ab:	68 3d 69 36 38       	push   0x3836693d
  b0:	36 20 2d 67 20 2d 66 	and    BYTE PTR ss:0x662d2067,ch
  b7:	73 74                	jae    12d <_init-0x8048233>
  b9:	61                   	popa   
  ba:	63 6b 2d             	arpl   WORD PTR [ebx+0x2d],bp
  bd:	70 72                	jo     131 <_init-0x804822f>
  bf:	6f                   	outs   dx,DWORD PTR ds:[esi]
  c0:	74 65                	je     127 <_init-0x8048239>
  c2:	63 74 6f 72          	arpl   WORD PTR [edi+ebp*2+0x72],si
  c6:	00 73 68             	add    BYTE PTR [ebx+0x68],dh
  c9:	6f                   	outs   dx,DWORD PTR ds:[esi]
  ca:	72 74                	jb     140 <_init-0x8048220>
  cc:	20 75 6e             	and    BYTE PTR [ebp+0x6e],dh
  cf:	73 69                	jae    13a <_init-0x8048226>
  d1:	67 6e                	outs   dx,BYTE PTR ds:[si]
  d3:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[ecx+0x6e],ch
  d8:	74 00                	je     da <_init-0x8048286>
  da:	73 74                	jae    150 <_init-0x8048210>
  dc:	64 69 6e 00 5f 49 4f 	imul   ebp,DWORD PTR fs:[esi+0x0],0x5f4f495f
  e3:	5f 
  e4:	73 61                	jae    147 <_init-0x8048219>
  e6:	76 65                	jbe    14d <_init-0x8048213>
  e8:	5f                   	pop    edi
  e9:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  eb:	64 00 5f 49          	add    BYTE PTR fs:[edi+0x49],bl
  ef:	4f                   	dec    edi
  f0:	5f                   	pop    edi
  f1:	6c                   	ins    BYTE PTR es:[edi],dx
  f2:	6f                   	outs   dx,DWORD PTR ds:[esi]
  f3:	63 6b 5f             	arpl   WORD PTR [ebx+0x5f],bp
  f6:	74 00                	je     f8 <_init-0x8048268>
  f8:	5f                   	pop    edi
  f9:	6d                   	ins    DWORD PTR es:[edi],dx
  fa:	61                   	popa   
  fb:	72 6b                	jb     168 <_init-0x80481f8>
  fd:	65                   	gs
  fe:	72 73                	jb     173 <_init-0x80481ed>
 100:	00 5f 70             	add    BYTE PTR [edi+0x70],bl
 103:	6f                   	outs   dx,DWORD PTR ds:[esi]
 104:	73 00                	jae    106 <_init-0x804825a>
 106:	6d                   	ins    DWORD PTR es:[edi],dx
 107:	61                   	popa   
 108:	69 6e 00 5f 66 6c 61 	imul   ebp,DWORD PTR [esi+0x0],0x616c665f
 10f:	67 73 32             	addr16 jae 144 <_init-0x804821c>
 112:	00 5f 73             	add    BYTE PTR [edi+0x73],bl
 115:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 118:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 11b:	71 75                	jno    192 <_init-0x80481ce>
 11d:	61                   	popa   
 11e:	64                   	fs
 11f:	5f                   	pop    edi
 120:	74 00                	je     122 <_init-0x804823e>
 122:	5f                   	pop    edi
 123:	6f                   	outs   dx,DWORD PTR ds:[esi]
 124:	6c                   	ins    BYTE PTR es:[edi],dx
 125:	64                   	fs
 126:	5f                   	pop    edi
 127:	6f                   	outs   dx,DWORD PTR ds:[esi]
 128:	66                   	data16
 129:	66                   	data16
 12a:	73 65                	jae    191 <_init-0x80481cf>
 12c:	74 00                	je     12e <_init-0x8048232>
 12e:	5f                   	pop    edi
 12f:	6c                   	ins    BYTE PTR es:[edi],dx
 130:	6f                   	outs   dx,DWORD PTR ds:[esi]
 131:	63 6b 00             	arpl   WORD PTR [ebx+0x0],bp
 134:	76 75                	jbe    1ab <_init-0x80481b5>
 136:	6c                   	ins    BYTE PTR es:[edi],dx
 137:	2e 63 00             	arpl   WORD PTR cs:[eax],ax
 13a:	5f                   	pop    edi
 13b:	49                   	dec    ecx
 13c:	4f                   	dec    edi
 13d:	5f                   	pop    edi
 13e:	6d                   	ins    DWORD PTR es:[edi],dx
 13f:	61                   	popa   
 140:	72 6b                	jb     1ad <_init-0x80481b3>
 142:	65                   	gs
 143:	72 00                	jb     145 <_init-0x804821b>
 145:	5f                   	pop    edi
 146:	63 75 72             	arpl   WORD PTR [ebp+0x72],si
 149:	5f                   	pop    edi
 14a:	63 6f 6c             	arpl   WORD PTR [edi+0x6c],bp
 14d:	75 6d                	jne    1bc <_init-0x80481a4>
 14f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 150:	00 6c 6f 6e          	add    BYTE PTR [edi+ebp*2+0x6e],ch
 154:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
 158:	6e                   	outs   dx,BYTE PTR ds:[esi]
 159:	67 20 75 6e          	and    BYTE PTR [di+0x6e],dh
 15d:	73 69                	jae    1c8 <_init-0x8048198>
 15f:	67 6e                	outs   dx,BYTE PTR ds:[si]
 161:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[ecx+0x6e],ch
 166:	74 00                	je     168 <_init-0x80481f8>
 168:	5f                   	pop    edi
 169:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [ebp+eiz*2+0x6e],0x6f
 170:	5f                   	pop    edi
 171:	49                   	dec    ecx
 172:	4f                   	dec    edi
 173:	5f                   	pop    edi
 174:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 177:	5f                   	pop    edi
 178:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 17b:	65 00 5f 6e          	add    BYTE PTR gs:[edi+0x6e],bl
 17f:	65                   	gs
 180:	78 74                	js     1f6 <_init-0x804816a>
 182:	00 5f 76             	add    BYTE PTR [edi+0x76],bl
 185:	74 61                	je     1e8 <_init-0x8048178>
 187:	62 6c 65 5f          	bound  ebp,QWORD PTR [ebp+eiz*2+0x5f]
 18b:	6f                   	outs   dx,DWORD PTR ds:[esi]
 18c:	66                   	data16
 18d:	66                   	data16
 18e:	73 65                	jae    1f5 <_init-0x804816b>
 190:	74 00                	je     192 <_init-0x80481ce>
 192:	5f                   	pop    edi
 193:	5f                   	pop    edi
 194:	6f                   	outs   dx,DWORD PTR ds:[esi]
 195:	66 66 5f             	data32 pop di
 198:	74 00                	je     19a <_init-0x80481c6>
 19a:	5f                   	pop    edi
 19b:	75 6e                	jne    20b <_init-0x8048155>
 19d:	75 73                	jne    212 <_init-0x804814e>
 19f:	65 64 32 00          	gs xor al,BYTE PTR fs:gs:[eax]
 1a3:	73 69                	jae    20e <_init-0x8048152>
 1a5:	7a 65                	jp     20c <_init-0x8048154>
 1a7:	74 79                	je     222 <_init-0x804813e>
 1a9:	70 65                	jo     210 <_init-0x8048150>
 1ab:	00 6c 6f 6e          	add    BYTE PTR [edi+ebp*2+0x6e],ch
 1af:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
 1b3:	6e                   	outs   dx,BYTE PTR ds:[esi]
 1b4:	67 20 69 6e          	and    BYTE PTR [bx+di+0x6e],ch
 1b8:	74 00                	je     1ba <_init-0x80481a6>
 1ba:	73 74                	jae    230 <_init-0x8048130>
 1bc:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 1be:	75 74                	jne    234 <_init-0x804812c>
 1c0:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 1c3:	4f                   	dec    edi
 1c4:	5f                   	pop    edi
 1c5:	77 72                	ja     239 <_init-0x8048127>
 1c7:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x646e65
 1ce:	00 
 1cf:	73 68                	jae    239 <_init-0x8048127>
 1d1:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1d2:	72 74                	jb     248 <_init-0x8048118>
 1d4:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
 1d7:	74 00                	je     1d9 <_init-0x8048187>
 1d9:	5f                   	pop    edi
 1da:	49                   	dec    ecx
 1db:	4f                   	dec    edi
 1dc:	5f                   	pop    edi
 1dd:	62 61 63             	bound  esp,QWORD PTR [ecx+0x63]
 1e0:	6b 75 70 5f          	imul   esi,DWORD PTR [ebp+0x70],0x5f
 1e4:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 1e7:	65 00 5f 66          	add    BYTE PTR gs:[edi+0x66],bl
 1eb:	6c                   	ins    BYTE PTR es:[edi],dx
 1ec:	61                   	popa   
 1ed:	67 73 00             	addr16 jae 1f0 <_init-0x8048170>
 1f0:	5f                   	pop    edi
 1f1:	5f                   	pop    edi
 1f2:	70 61                	jo     255 <_init-0x804810b>
 1f4:	64 31 00             	xor    DWORD PTR fs:[eax],eax
 1f7:	5f                   	pop    edi
 1f8:	49                   	dec    ecx
 1f9:	4f                   	dec    edi
 1fa:	5f                   	pop    edi
 1fb:	77 72                	ja     26f <_init-0x80480f1>
 1fd:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x727470
 204:	00 
 205:	5f                   	pop    edi
 206:	5f                   	pop    edi
 207:	70 61                	jo     26a <_init-0x80480f6>
 209:	64                   	fs
 20a:	34 00                	xor    al,0x0
 20c:	5f                   	pop    edi
 20d:	5f                   	pop    edi
 20e:	70 61                	jo     271 <_init-0x80480ef>
 210:	64                   	fs
 211:	35 00 2f 68 6f       	xor    eax,0x6f682f00
 216:	6d                   	ins    DWORD PTR es:[edi],dx
 217:	65                   	gs
 218:	2f                   	das    
 219:	77 69                	ja     284 <_init-0x80480dc>
 21b:	6e                   	outs   dx,BYTE PTR ds:[esi]
 21c:	65                   	gs
 21d:	73 61                	jae    280 <_init-0x80480e0>
 21f:	70 2f                	jo     250 <_init-0x8048110>
 221:	63 6f 75             	arpl   WORD PTR [edi+0x75],bp
 224:	72 73                	jb     299 <_init-0x80480c7>
 226:	65                   	gs
 227:	2f                   	das    
 228:	73 72                	jae    29c <_init-0x80480c4>
 22a:	63 2f                	arpl   WORD PTR [edi],bp
 22c:	66 6d                	ins    WORD PTR es:[edi],dx
 22e:	74 00                	je     230 <_init-0x8048130>
 230:	5f                   	pop    edi
 231:	49                   	dec    ecx
 232:	4f                   	dec    edi
 233:	5f                   	pop    edi
 234:	72 65                	jb     29b <_init-0x80480c5>
 236:	61                   	popa   
 237:	64                   	fs
 238:	5f                   	pop    edi
 239:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 23c:	65 00 5f 73          	add    BYTE PTR gs:[edi+0x73],bl
 240:	68 6f 72 74 62       	push   0x6274726f
 245:	75 66                	jne    2ad <_init-0x80480b3>
	...
